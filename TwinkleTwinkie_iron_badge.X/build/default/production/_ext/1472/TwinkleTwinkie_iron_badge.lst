MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; <- everything after a semiconlon is a comment 
                      00002 ;#######################################################################################################
                            ##################################################
                      00003 ;Copyright (c) 2019 Peter Shabino
                      00004 ;
                      00005 ;Permission is hereby granted, free of charge, to any person obtaining a copy of this hardware, software
                            , and associated documentation files 
                      00006 ;(the "Product"), to deal in the Product without restriction, including without limitation the rights to
                             use, copy, modify, merge, publish, 
                      00007 ;distribute, sublicense, and/or sell copies of the Product, and to permit persons to whom the Product is
                             furnished to do so, subject to the 
                      00008 ;following conditions:
                      00009 ;
                      00010 ;The above copyright notice and this permission notice shall be included in all copies or substantial po
                            rtions of the Product.
                      00011 ;
                      00012 ;THE PRODUCT IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LI
                            MITED TO THE WARRANTIES OF 
                      00013 ;MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
                             COPYRIGHT HOLDERS BE LIABLE 
                      00014 ;FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
                             FROM, OUT OF OR IN CONNECTION 
                      00015 ;WITH THE PRODUCT OR THE USE OR OTHER DEALINGS IN THE PRODUCT.
                      00016 ;#######################################################################################################
                            ##################################################      
                      00017 ; 11May2019 V0 PJS New
                      00018 ; 12May2019 V1 PJS started carlieplex code using IRQs   
                      00019 ; 23May2019 V2 PJS mode switch, animation timer, and first mode (blue breating) done
                      00020 ; 01Jun2019 V3 PJS added mode saving to flash and new patterns (cap't, mistake #2, rainbow!)
                      00021 ; 18Jun2019 V4 PJS added breathing green, red, yellow, purple, orange, and pink. Also added solid versio
                            n of all the previous colors plus blue. Updated timers on 2 animations to slow them down. 
                      00022 ; 20Jun2019 V5 PJS added 5 more color patterns to the 2 dot rotate and single dot chase 
                      00023     
                      00024 ; Pre compiler definition. Just like C these statements are processed before the compile happens. 
                      00025 #define CODE_VER_STRING "Peter Shabino 20Jun2019 code for Twinkle Twinkie Iron Badge V5 www.wire2wire.or
                            g!" ;Just in ROM !!!
                      00026 
                      00027 
                      00028 ; Wiring pin list just for easy referance no affect on the code
                      00029 ;****************************************************************************************
                      00030 ; port list [SSOP20]
                      00031 ; Vdd(1)
                      00032 ; Vss(20)
                      00033 ; RA0(19)       [ICSPDAT]
                      00034 ; RA1(18)       [ICSPCLK]
                      00035 ; RA2(17)       D1-6B D9,D15
                      00036 ; RA3(4)        [#MCLR] select button in
                      00037 ; RA4(3)        D1-6R D7,D13
                      00038 ; RA5(2)        D1-6G D8,D14
                      00039 ; RB4(13)       D7-12G D2,D17
                      00040 ; RB5(12)       D7-12R D1,D16
                      00041 ; RB6(11)       D7-12B D3,D18
                      00042 ; RB7(10)       
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00043 ; RC0(16)       SCL
                      00044 ; RC1(15)       SDA
                      00045 ; RC2(14)       
                      00046 ; RC3(7)        
                      00047 ; RC4(6)        
                      00048 ; RC5(5)        D13-18B D6,D12
                      00049 ; RC6(8)        D13-18G D5,D11
                      00050 ; RC7(9)        D13-18R D4,D10
                      00051 ;****************************************************************************************
                      00052 
                      00053 
                      00054 ; The following links configure the "fuses" on older devices these could only be configured one time at 
                            programming. Some newer devices let you update some of them run time. 
                      00055 ; These are core options like clock source, speed, read protection, etc. 
                      00056 ; Easiest way to configure these in MPLABX is to go Windows->Target memory views->Configureation bits th
                            is will pop up a new tab in the lower right window with descriptions 
                      00057 ; of each bit and pull downs with the available settings. Once you make all yor choces click the "Genera
                            te Source Code to Output" button. When you click the button the 
                      00058 ; "Output - config bits source" tab will pop to the front with the following flags configured in it. Cop
                            y paste here and your done. 
                      00059 #include "p16f15344.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Mar 17 2019
                      00005 ;  MPASM PIC16F15344 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      03822         LIST
                      00060 ; CONFIG1
                      00061 ; __config 0xFFFC
8007   3FFC           00062  __CONFIG _CONFIG1, _FEXTOSC_OFF & _RSTOSC_EXT1X & _CLKOUTEN_OFF & _CSWEN_ON & _FCMEN_ON
                      00063 ; CONFIG2
                      00064 ; __config 0xF7FC
8008   37FC           00065  __CONFIG _CONFIG2, _MCLRE_OFF & _PWRTE_ON & _LPBOREN_OFF & _BOREN_ON & _BORV_LO & _ZCD_OFF & _PPS1WAY_O
                            FF & _STVREN_ON
                      00066 ; CONFIG3
                      00067 ; __config 0xFF9F
8009   3F9F           00068  __CONFIG _CONFIG3, _WDTCPS_WDTCPS_31 & _WDTE_OFF & _WDTCWS_WDTCWS_7 & _WDTCCS_SC
                      00069 ; CONFIG4
                      00070 ; __config 0xFFFF
800A   1FFF           00071  __CONFIG _CONFIG4, _BBSIZE_BB512 & _BBEN_OFF & _SAFEN_OFF & _WRTAPP_OFF & _WRTB_OFF & _WRTC_OFF & _WRTS
                            AF_OFF & _LVP_OFF
                      00072 ; CONFIG5
                      00073 ; __config 0xFFFF
800B   3FFF           00074  __CONFIG _CONFIG5, _CP_OFF 
                      00075 ; max speed, BOR enabled, No boot block or SAF, no read or write protect enabled 
                      00076 
                      00077  
                      00078 ; <spaghetti> 
                      00079  
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00080  
                      00081 ; No need to use this just a place to put named constants to make tweeking multi use constants easier  
                      00082 ;------------------
                      00083 ; constants
                      00084 ;------------------     
  000000C0            00085 TMR1L_value             equ 0xC0                ; the TMR1 values set the display scan rate. Too slow (s
                            maller value) and it will filcker. Too high (larger value) and the firmware will endlessly get s
  000000FF            00086 TMR1H_value             equ     0xFF
  00000010            00087 max_color_depth equ 0x10                ; the max_color_depth sets how many bits of PWM the code tries t
                            o emulate. The more bits the more potential color combinations you can have. The draw back is th
  00008FE0            00088 mode_save               equ 0x8FE0 
                      00089 
                      00090         org     0FE0h 
0FE0   00FF 00FF 00FF 00091         de      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
                            , 0xFF
       00FF 00FF 00FF 
       00FF 00FF 00FF 
       00FF 00FF 00FF 
       00FF 00FF 00FF 
       00FF 
0FF0   00FF 00FF 00FF 00092         de      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
                            , 0xFF          
       00FF 00FF 00FF 
       00FF 00FF 00FF 
       00FF 00FF 00FF 
       00FF 00FF 00FF 
       00FF 
                      00093                 
                      00094                 
                      00095 ; there are 3 major memory ranges in the PIC. Ram, Flash, and user data
                      00096 ; -- Ram are fixed registers you can read and write from with a single cycle. Some control special funct
                            ions like IO while otheres are just storage locations
                      00097 ; See page 38+ of http://ww1.microchip.com/downloads/en/DeviceDoc/PIC16-L-F15324-44-data-sheet-40001889B
                            .pdf for the full map. 
                      00098 ; Due to the size of the memory map and the lack of bits in the instructions the map is broken up in to 
                            banks. You need to make sure the correct bank is selected before read/write our you will get the
                      00099 ; exception is the core register bank and the common RAM (I call it global below) which is at the same a
                            ddresses in EVERY bank of ram. 
                      00100 ; -- Flash is where the user program is stored / run from. To byte wise reads from it are relatively eas
                            y. Writes are difficult and typically have to be done a word line at a time (32 words in this ca
                      00101 ; this part only has a single page of flash. So no need to worry about crossing flash page boundarys (sp
                            ecial care is needed to switch banks back and forth properly) 
                      00102 ; more info on page 32 of http://ww1.microchip.com/downloads/en/DeviceDoc/PIC16-L-F15324-44-data-sheet-4
                            0001889B.pdf.
                      00103 ; -- User data are special ranges that have different rules from the bulk flash area. Some parts have by
                            te wise single instruction read / write. Otheres have special boot areas and so on. Not using an
                      00104  
                      00105 ; the eq command allows setting a lable to a specific value. I use this to lay out my memory map here. N
                            o need to do this at all but your future self and others looking at the code will thank you late
                      00106 ;------------------
                      00107 ; vars (0x20 - 0x6f) bank 0
                      00108 ;------------------ 
  00000020            00109 led_seq         equ     0x20
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000021            00110 led1r           equ     0x21
  00000022            00111 led1g           equ     0x22
  00000023            00112 led1b           equ     0x23
  00000024            00113 led2r           equ     0x24
  00000025            00114 led2g           equ     0x25
  00000026            00115 led2b           equ     0x26
  00000027            00116 led3r           equ     0x27
  00000028            00117 led3g           equ     0x28
  00000029            00118 led3b           equ     0x29
  0000002A            00119 led4r           equ     0x2a
  0000002B            00120 led4g           equ     0x2b
  0000002C            00121 led4b           equ     0x2c
  0000002D            00122 led5r           equ     0x2d
  0000002E            00123 led5g           equ     0x2e
  0000002F            00124 led5b           equ     0x2f
                      00125 ;led6r          equ     0x30  ; skip led not used (if enabled again remap everything...)
                      00126 ;led6g          equ     0x31
                      00127 ;led6b          equ     0x32
  00000030            00128 led7r           equ     0x30
  00000031            00129 led7g           equ     0x31
  00000032            00130 led7b           equ     0x32
  00000033            00131 led8r           equ     0x33
  00000034            00132 led8g           equ     0x34
  00000035            00133 led8b           equ     0x35
  00000036            00134 led9r           equ     0x36
  00000037            00135 led9g           equ     0x37
  00000038            00136 led9b           equ     0x38
  00000039            00137 led10r          equ     0x39
  0000003A            00138 led10g          equ     0x3a
  0000003B            00139 led10b          equ     0x3b
                      00140 ;led11r         equ     0x3e    ; skip led not used (if enabled again remap everything...)
                      00141 ;led11g         equ     0x3f
                      00142 ;led11b         equ     0x40
                      00143 ;led12r         equ     0x41    ; skip led not used (if enabled again remap everything...)
                      00144 ;led12g         equ     0x42
                      00145 ;led12b         equ     0x43
  0000003C            00146 led13r          equ     0x3c
  0000003D            00147 led13g          equ     0x3d
  0000003E            00148 led13b          equ     0x3e
  0000003F            00149 led14r          equ     0x3f
  00000040            00150 led14g          equ     0x40
  00000041            00151 led14b          equ     0x41
  00000042            00152 led15r          equ     0x42
  00000043            00153 led15g          equ     0x43
  00000044            00154 led15b          equ     0x44
  00000045            00155 led16r          equ     0x45
  00000046            00156 led16g          equ     0x46
  00000047            00157 led16b          equ     0x47
  00000048            00158 led17r          equ     0x48
  00000049            00159 led17g          equ     0x49
  0000004A            00160 led17b          equ     0x4a
  0000004B            00161 led18r          equ     0x4b
  0000004C            00162 led18g          equ     0x4c
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000004D            00163 led18b          equ     0x4d
                      00164 ; space for full LED map if needed.             
  00000056            00165 irq_temp        equ 0x56
  00000057            00166 fake_pwm        equ     0x57
  00000058            00167 debounce        equ 0x58
  00000059            00168 mode            equ     0x59
  0000005A            00169 stat            equ 0x5a
  0000005B            00170 bulk_red        equ 0x5b
  0000005C            00171 bulk_green      equ 0x5c
  0000005D            00172 bulk_blue       equ     0x5d
  0000005E            00173 ann_seq0        equ 0x5e
  0000005F            00174 ann_seq1        equ     0x5f
  00000060            00175 ann_seq2        equ     0x60
  00000061            00176 ann_seq3        equ     0x61
  00000062            00177 LFSR_0          equ     0x62            
  00000063            00178 LFSR_1          equ     0x63            
  00000064            00179 LFSR_2          equ     0x64            
  00000065            00180 LFSR_3          equ     0x65    
  00000066            00181 LFSR_count      equ     0x66
  00000067            00182 temp            equ 0x67
                      00183 
                      00184                 
                      00185                 
                      00186 ;------------------
                      00187 ; vars (0xa0 - 0xef) bank 1
                      00188 ;------------------ 
                      00189 
                      00190                 
                      00191 ;------------------
                      00192 ; vars (0x120 - 0x16f) bank 2
                      00193 ;------------------ 
                      00194 
                      00195 ;------------------
                      00196 ; vars (0x1a0 - 0xaef) bank 3
                      00197 ;------------------ 
                      00198 
                      00199 ;------------------
                      00200 ; vars (0x220 - 0xe6f) bank 4
                      00201 ;------------------ 
                      00202 
                      00203 ;------------------
                      00204 ; vars (0x2a0 - 0x2ef) bank 5
                      00205 ;------------------ 
                      00206 
                      00207 ;------------------
                      00208 ; vars (0x320 - 0x32f) bank 6
                      00209 ;------------------ 
                      00210  
                      00211 ;------------------
                      00212 ; vars (0x70 - 0x7F) global regs (lats 16 bytes of every bank point back to these locations)
                      00213 ;------------------
  00000070            00214 gtemp           equ     0x70
                      00215 
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00216 
                      00217 ; There are 2 special addresses in the memory map 0x0 and 0x4. 
                      00218 ; 0x0 is where the micro starts running when it comes out of reset. This is typically just a jump to the
                             start of the initilization code. 
                      00219 ; 0x4 is where the micro jumps to ever time a interrup is active. 
                      00220 ;put the following at address 0000h
                      00221         org     0000h
0000   2???           00222         goto    START                       ;vector to initialization sequence
                      00223 
                      00224 
                      00225 ;#######################################################################################################
                            ####################
                      00226 ; intrupt routine
                      00227 ; if reading thought the code for the first time skip down to the "START" lable and come back here later
                            . 
                      00228 ;#######################################################################################################
                            ####################
                      00229         ;put the following at address 0004h
                      00230         org     0004h
                      00231         ; following regs are autosaved to shadow register on interrupt. 
                      00232         ; W
                      00233         ; STATUS (except TO and PD)
                      00234         ; BSR
                      00235         ; FSR
                      00236         ; PCLATH
                      00237         ; the retfie instruction will restore them from the shadow regs. 
                      00238         ; make sure to set to a known value when you start processing the interrupt as they could be set
                             to anyting at this point. 
                      00239 
                      00240         ;------------------
0004   300E           00241         movlw   d'14'
0005   0088           00242         movwf   BSR             
                      00243         ;------------------
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0006   1C10           00244         btfss   PIR4, 0                         ; is timer 1 IRQ active
0007   2???           00245         goto    IRQ_not_tmr1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   1010           00246         bcf             PIR4, 0                         ; clear timer 1 flag
                      00247         
                      00248         ;------------------
0009   3004           00249         movlw   d'4'
000A   0088           00250         movwf   BSR             
                      00251         ;------------------
                      00252         ; reset timer 1 (can be issues updating timer 1 while running. So stop then reset it) 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000B   100E           00253         bcf             T1CON, 0                ; timer off
000C   30FF           00254         movlw   TMR1H_value             ; update values
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000D   008D           00255         movwf   TMR1H
000E   30C0           00256         movlw   TMR1L_value
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   008C           00257         movwf   TMR1L
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010   140E           00258         bsf             T1CON, 0                ; timer on
                      00259 
                      00260         
                      00261         ;------------------     
0011   0188           00262         clrf    BSR                         ; bank 0
                      00263         ;------------------     
                      00264         
                      00265         
                      00266         ; turn off all the LEDs (make them inputs)
0012   3034           00267         movlw   0x34
0013   0492           00268         iorwf   TRISA, F
0014   3070           00269         movlw   0x70
0015   0493           00270         iorwf   TRISB, F
0016   30E0           00271         movlw   0xE0
0017   0494           00272         iorwf   TRISC, F
                      00273 
                      00274 
                      00275         ; make sure led_seq is in range if over will jump to who knows where
0018   300F           00276         movlw   0x0F                            ; 15 skipping unused LEDs
0019   0220           00277         subwf   led_seq, W                      ; C = 0 if W > F, C = 1 W <= F
001A   1C03           00278         btfss   STATUS, C
001B   2???           00279         goto    IRQ_bank_scan
001C   01A0           00280         clrf    led_seq 
001D   0AD7           00281         incf    fake_pwm, F                     ; update the PWM bank to the next step. 
001E   3010           00282         movlw   max_color_depth         ; count 0 to full on 
001F   0257           00283         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
0020   1803           00284         btfsc   STATUS, C
0021   01D7           00285         clrf    fake_pwm
0022                  00286 IRQ_bank_scan   
                      00287         
                      00288         ; set the common pin high for the led selected. 
0022   0820           00289         movf    led_seq, W
0023   00D6           00290         movwf   irq_temp
0024   1003           00291         bcf             STATUS, C
0025   0DD6           00292         rlf             irq_temp, f             ; multiply by 2
0026   1003           00293         bcf             STATUS, C
0027   0D56           00294         rlf             irq_temp, W             ; multiply by 2
                      00295         ; jump lookup table
0028   000B           00296         brw
0029   1699           00297         bsf             LATB, 5                 ; D1
002A   1293           00298         bcf             TRISB, 5                ; make it a output
002B   2???           00299         goto    IRQ_set_common_done
002C   0000           00300         nop                                             ; required for spacing on the jumps
002D   1619           00301         bsf             LATB, 4                 ; D2
002E   1213           00302         bcf             TRISB, 4                ; make it a output
002F   2???           00303         goto    IRQ_set_common_done
0030   0000           00304         nop                                             ; required for spacing on the jumps
0031   1719           00305         bsf             LATB, 6                 ; D3
0032   1313           00306         bcf             TRISB, 6                ; make it a output
0033   2???           00307         goto    IRQ_set_common_done
0034   0000           00308         nop                                             ; required for spacing on the jumps
0035   179A           00309         bsf             LATC, 7                 ; D4
0036   1394           00310         bcf             TRISC, 7                ; make it a output
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0037   2???           00311         goto    IRQ_set_common_done
0038   0000           00312         nop                                             ; required for spacing on the jumps
0039   171A           00313         bsf             LATC, 6                 ; D5
003A   1314           00314         bcf             TRISC, 6                ; make it a output
003B   2???           00315         goto    IRQ_set_common_done
003C   0000           00316         nop                                             ; required for spacing on the jumps
                      00317 ;       bsf             LATC, 5                 ; D6 skip not used
                      00318 ;       bcf             TRISC, 5                ; make it a output
                      00319 ;       goto    IRQ_set_common_done
                      00320 ;       nop                                             ; required for spacing on the jumps
003D   1618           00321         bsf             LATA, 4                 ; D7
003E   1212           00322         bcf             TRISA, 4                ; make it a output
003F   2???           00323         goto    IRQ_set_common_done
0040   0000           00324         nop                                             ; required for spacing on the jumps
0041   1698           00325         bsf             LATA, 5                 ; D8
0042   1292           00326         bcf             TRISA, 5                ; make it a output
0043   2???           00327         goto    IRQ_set_common_done
0044   0000           00328         nop                                             ; required for spacing on the jumps
0045   1518           00329         bsf             LATA, 2                 ; D9
0046   1112           00330         bcf             TRISA, 2                ; make it a output
0047   2???           00331         goto    IRQ_set_common_done
0048   0000           00332         nop                                             ; required for spacing on the jumps
0049   179A           00333         bsf             LATC, 7                 ; D10
004A   1394           00334         bcf             TRISC, 7                ; make it a output
004B   2???           00335         goto    IRQ_set_common_done
004C   0000           00336         nop                                             ; required for spacing on the jumps
                      00337 ;       bsf             LATC, 6                 ; D11 skip not used
                      00338 ;       bcf             TRISC, 6                ; make it a output
                      00339 ;       goto    IRQ_set_common_done
                      00340 ;       nop                                             ; required for spacing on the jumps
                      00341 ;       bsf             LATC, 5                 ; D12 skip not used
                      00342 ;       bcf             TRISC, 5                ; make it a output
                      00343 ;       goto    IRQ_set_common_done
                      00344 ;       nop                                             ; required for spacing on the jumps
004D   1618           00345         bsf             LATA, 4                 ; D13
004E   1212           00346         bcf             TRISA, 4                ; make it a output
004F   2???           00347         goto    IRQ_set_common_done
0050   0000           00348         nop                                             ; required for spacing on the jumps
0051   1698           00349         bsf             LATA, 5                 ; D14
0052   1292           00350         bcf             TRISA, 5                ; make it a output
0053   2???           00351         goto    IRQ_set_common_done
0054   0000           00352         nop                                             ; required for spacing on the jumps
0055   1518           00353         bsf             LATA, 2                 ; D15
0056   1112           00354         bcf             TRISA, 2                ; make it a output
0057   2???           00355         goto    IRQ_set_common_done
0058   0000           00356         nop                                             ; required for spacing on the jumps
0059   1699           00357         bsf             LATB, 5                 ; D16
005A   1293           00358         bcf             TRISB, 5                ; make it a output
005B   2???           00359         goto    IRQ_set_common_done
005C   0000           00360         nop                                             ; required for spacing on the jumps
005D   1619           00361         bsf             LATB, 4                 ; D17
005E   1213           00362         bcf             TRISB, 4                ; make it a output
005F   2???           00363         goto    IRQ_set_common_done
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0060   0000           00364         nop                                             ; required for spacing on the jumps
0061   1719           00365         bsf             LATB, 6                 ; D18
0062   1313           00366         bcf             TRISB, 6                ; make it a output
0063   2???           00367         goto    IRQ_set_common_done
0064   0000           00368         nop                                             ; required for spacing on the jumps
                      00369         
0065                  00370 IRQ_set_common_done     
                      00371         
                      00372         
                      00373         
0065   0185           00374         clrf    FSR0H
0066   3021           00375         movlw   led1r
0067   0084           00376         movwf   FSR0L
0068   0820           00377         movf    led_seq, W
0069   0784           00378         addwf   FSR0L, F                ; set FSR0 to 3x led_seq
006A   0784           00379         addwf   FSR0L, F
006B   0784           00380         addwf   FSR0L, F
                      00381         
                      00382         ; set the RGB lines low for which you want to turn on for this led
                      00383         ; bank 1 (led 1 thru 6). 
                      00384         ;movlw  0x06
006C   3005           00385         movlw   0x05                            ; skip unused LEDS                              
006D   0220           00386         subwf   led_seq, W                      ; C = 0 if W > F, C = 1 W <= F
006E   1803           00387         btfsc   STATUS, C
006F   2???           00388         goto    IRQ_bank1_chk
                      00389 
                      00390         ; red
0070   0800           00391         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
0071   0257           00392         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
0072   1803           00393         btfsc   STATUS, C
0073   2???           00394         goto    IRQ_bank0_red
0074   1218           00395         bcf             LATA, 4
0075   1212           00396         bcf             TRISA, 4
0076                  00397 IRQ_bank0_red
                      00398         ; green
0076   0A84           00399         incf    FSR0L, F
0077   0800           00400         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
0078   0257           00401         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
0079   1803           00402         btfsc   STATUS, C
007A   2???           00403         goto    IRQ_bank0_green
007B   1298           00404         bcf             LATA, 5
007C   1292           00405         bcf             TRISA, 5
007D                  00406 IRQ_bank0_green
                      00407         ; blue
007D   0A84           00408         incf    FSR0L, F
007E   0800           00409         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
007F   0257           00410         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
0080   1803           00411         btfsc   STATUS, C
0081   2???           00412         goto    IRQ_banks_done  
0082   1118           00413         bcf             LATA, 2
0083   1112           00414         bcf             TRISA, 2
0084   2???           00415         goto    IRQ_banks_done  
                      00416         
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0085                  00417 IRQ_bank1_chk
                      00418         ; bank 2 (led 7 thru 12). 
                      00419         ;movlw  0x0C                            ; 12
0085   3009           00420         movlw   0x09                            ; 9 skip unused LEDS
0086   0220           00421         subwf   led_seq, W                      ; C = 0 if W > F, C = 1 W <= F
0087   1803           00422         btfsc   STATUS, C
0088   2???           00423         goto    IRQ_bank2_chk
                      00424 
                      00425         ; red
0089   0800           00426         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
008A   0257           00427         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
008B   1803           00428         btfsc   STATUS, C
008C   2???           00429         goto    IRQ_bank1_red
008D   1299           00430         bcf             LATB, 5
008E   1293           00431         bcf             TRISB, 5
008F                  00432 IRQ_bank1_red
                      00433         ; green
008F   0A84           00434         incf    FSR0L, F
0090   0800           00435         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
0091   0257           00436         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
0092   1803           00437         btfsc   STATUS, C
0093   2???           00438         goto    IRQ_bank1_green
0094   1219           00439         bcf             LATB, 4
0095   1213           00440         bcf             TRISB, 4
0096                  00441 IRQ_bank1_green
                      00442         ; blue
0096   0A84           00443         incf    FSR0L, F
0097   0800           00444         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
0098   0257           00445         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
0099   1803           00446         btfsc   STATUS, C
009A   2???           00447         goto    IRQ_banks_done  
009B   1319           00448         bcf             LATB, 6
009C   1313           00449         bcf             TRISB, 6
009D   2???           00450         goto    IRQ_banks_done  
                      00451         
009E                  00452 IRQ_bank2_chk
                      00453         ; bank 3 (led 13 thru 18). 
                      00454         ; red
009E   0800           00455         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
009F   0257           00456         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
00A0   1803           00457         btfsc   STATUS, C
00A1   2???           00458         goto    IRQ_bank2_red   
00A2   139A           00459         bcf             LATC, 7
00A3   1394           00460         bcf             TRISC, 7
00A4                  00461 IRQ_bank2_red
                      00462         ; green
00A4   0A84           00463         incf    FSR0L, F
00A5   0800           00464         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
00A6   0257           00465         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
00A7   1803           00466         btfsc   STATUS, C
00A8   2???           00467         goto    IRQ_bank2_green
00A9   131A           00468         bcf             LATC, 6
00AA   1314           00469         bcf             TRISC, 6
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AB                  00470 IRQ_bank2_green
                      00471         ; blue
00AB   0A84           00472         incf    FSR0L, F
00AC   0800           00473         movf    INDF0, W                        ; check if led should be on for this fake PWM cycle
00AD   0257           00474         subwf   fake_pwm, W                     ; C = 0 if W > F, C = 1 W <= F
00AE   1803           00475         btfsc   STATUS, C
00AF   2???           00476         goto    IRQ_banks_done  
00B0   129A           00477         bcf             LATC, 5
00B1   1294           00478         bcf             TRISC, 5
                      00479         
                      00480         
00B2                  00481 IRQ_banks_done  
                      00482         
                      00483         
                      00484         ; Wiring pin list just for easy referance no affect on the code
                      00485 ;****************************************************************************************
                      00486 ; port list [SSOP20]
                      00487 ; Vdd(1)
                      00488 ; Vss(20)
                      00489 ; RA0(19)       [ICSPDAT]
                      00490 ; RA1(18)       [ICSPCLK]
                      00491 ; RA2(17)       D1-6B D9,D15
                      00492 ; RA3(4)        [#MCLR] select button in
                      00493 ; RA4(3)        D1-6R D7,D13
                      00494 ; RA5(2)        D1-6G D8,D14
                      00495 ; RB4(13)       D7-12G D2,D17
                      00496 ; RB5(12)       D7-12R D1,D16
                      00497 ; RB6(11)       D7-12B D3,D18
                      00498 ; RB7(10)       
                      00499 ; RC0(16)       SCL
                      00500 ; RC1(15)       SDA
                      00501 ; RC2(14)       
                      00502 ; RC3(7)        
                      00503 ; RC4(6)        
                      00504 ; RC5(5)        D13-18B D6,D12
                      00505 ; RC6(8)        D13-18G D5,D11
                      00506 ; RC7(9)        D13-18R D4,D10
                      00507 ;****************************************************************************************       
                      00508                 
                      00509 
                      00510         
                      00511         ; increment the timer sequence  
00B2   0AA0           00512         incf    led_seq, F
                      00513 
                      00514         
                      00515         
                      00516         
00B3                  00517 IRQ_not_tmr1    
                      00518         
00B3   0009           00519         retfie
                      00520 ;#######################################################################################################
                            ####################
                      00521 ; end of IRQ code
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00522 ;#######################################################################################################
                            ####################    
                      00523         
                      00524 
                      00525 ; this is a lable. Compiler will automatically replace these with addresses when used in goto and branch
                             statements.    
00B4                  00526 START
                      00527         ; init crap
                      00528         ;------------------
                      00529         ; the ram memory is broken up into into multiple pages. This command sets the current page to 0 
                            where I want to start my init work. 
00B4   0188           00530         clrf    BSR                         ; bank 0
                      00531         ;------------------
00B5   018B           00532         clrf    INTCON                  ; disable interupts
                      00533         
00B6   0198           00534         clrf    LATA                    ; set all IOs low 
00B7   0199           00535         clrf    LATB                    ; set all IOs low 
00B8   019A           00536         clrf    LATC                    ; set all IOs low 
                      00537         
00B9   30FF           00538         movlw   0xFF                    
00BA   0092           00539         movwf   TRISA                   ; all LED IOs to inputs (tristate), MCLR as input (can only be a
                             input)                 
00BB   3070           00540         movlw   0x70                    
00BC   0093           00541         movwf   TRISB                   ; all LED IOs to inputs (tristate), others as outputs to keep th
                            em from floating (draws more power than just driving them low)
00BD   30E0           00542         movlw   0xE0                    
00BE   0094           00543         movwf   TRISC                   ; all LED IOs to inputs (tristate), others as outputs to keep th
                            em from floating (draws more power than just driving them low) I2C is pins C0 and C1
                      00544         
                      00545         ; clear vars
00BF   3020           00546         movlw   0x20                    ; start of bank 0 vars
00C0   0084           00547         movwf   FSR0L
00C1   0185           00548         clrf    FSR0H
00C2   3050           00549         movlw   0x50                    ; clear all of bank other than globals
00C3   00F0           00550         movwf   gtemp
00C4                  00551 init_bank0_loop
00C4   0180           00552         clrf    INDF0
Message[305]: Using default destination of 1 (file).
00C5   0A84           00553         incf    FSR0L
00C6   0BF0           00554         decfsz  gtemp, F
00C7   2???           00555         goto    init_bank0_loop
                      00556         
                      00557         ; LFSR CANOT BE 0!!!! If it is it will never return any value other than 0. 
00C8   00C4           00558         movwf   0x44
00C9   00E2           00559         movwf   LFSR_0
00CA   00E3           00560         movwf   LFSR_1
00CB   00E4           00561         movwf   LFSR_2
00CC   00E5           00562         movwf   LFSR_3
                      00563         
                      00564         ;------------------
00CD   3004           00565         movlw   d'4'
00CE   0088           00566         movwf   BSR             
                      00567         ;------------------
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00568         ; set up timer1. This is used to drive the interrupt that updates the LEDs
                      00569         
00CF   30FF           00570         movlw   TMR1H_value
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D0   008D           00571         movwf   TMR1H
00D1   30C0           00572         movlw   TMR1L_value
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D2   008C           00573         movwf   TMR1L
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D3   0190           00574         clrf    T1GATE                  ; T1GPPS (not used)
00D4   3001           00575         movlw   0x01
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D5   0091           00576         movwf   T1CLK                   ; Fosc/4
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D6   018F           00577         clrf    T1GCON                  ; gate disable timer always counts
00D7   3007           00578         movlw   0x07
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D8   008E           00579         movwf   T1CON                   ; do not sync, 16 bit reads, timer 1 on
                      00580                 
                      00581         ;------------------
00D9   300E           00582         movlw   d'14'
00DA   0088           00583         movwf   BSR             
                      00584         ;------------------
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DB   141A           00585         bsf             PIE4, 0                         ; enable timer 1 IRQ
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DC   1010           00586         bcf             PIR4, 0                         ; clear timer 1 flag    
                      00587         
                      00588         ;------------------
00DD   303E           00589         movlw   d'62'
00DE   0088           00590         movwf   BSR             
                      00591         ;------------------
                      00592         ; configure properties of the IO pins.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DF   01B8           00593         clrf    ANSELA                  ; set io to be a digital pin not analog
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E0   01B9           00594         clrf    WPUA                    ; weak pull ups disabled
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E1   01BA           00595         clrf    ODCONA                  ; push pull not open drain selected. 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E2   01BB           00596         clrf    SLRCONA                 ; max slew rate (hard edges)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E3   01BC           00597         clrf    INLVLA                  ; pick TTL voltage levels over ST levels for interrupt on change
                             comparitor (if used)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E4   01C3           00598         clrf    ANSELB                  ; set io to be a digital pin not analog
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E5   01C4           00599         clrf    WPUB                    ; weak pull ups disabled
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E6   01C5           00600         clrf    ODCONB                  ; push pull not open drain selected. 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E7   01C6           00601         clrf    SLRCONB                 ; max slew rate (hard edges)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E8   01C7           00602         clrf    INLVLB                  ; pick TTL voltage levels over ST levels for interrupt on change
                             comparitor (if used)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E9   01CE           00603         clrf    ANSELC                  ; set io to be a digital pin not analog
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EA   01CF           00604         clrf    WPUC                    ; weak pull ups disabled
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EB   01D0           00605         clrf    ODCONC                  ; push pull not open drain selected. 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EC   01D1           00606         clrf    SLRCONC                 ; max slew rate (hard edges)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00ED   01D2           00607         clrf    INLVLC                  ; pick TTL voltage levels over ST levels for interrupt on change
                             comparitor (if used)
                      00608 
                      00609 
                      00610         ;------------------
00EE   0188           00611         clrf    BSR                                     ; bank 0
                      00612         ;------------------
00EF   30E0           00613         movlw   0xE0                            ; global, PE, and Timer 0 on
00F0   008B           00614         movwf   INTCON                      ; enable interrupts
                      00615 
                      00616 
                      00617         
                      00618         ; grab the saved mode value from flash
00F1   308F           00619         movlw   HIGH(mode_save)
00F2   0085           00620         movwf   FSR0H
00F3   30E0           00621         movlw   LOW(mode_save)
00F4   0084           00622         movwf   FSR0L
00F5   0800           00623         movf    INDF0, W
00F6   00D9           00624         movwf   mode
                      00625         
                      00626         
                      00627 ;-------------------------------------------------------------------------------------------------------
                            -------------------------------------------     
00F7                  00628 MAINLOOP
                      00629         ;------------------
00F7   0188           00630         clrf    BSR                                     ; bank 0
                      00631         ;------------------
                      00632         
                      00633         
                      00634         ; deboune the button incremetn the mode when the button is pressed
00F8   1003           00635         bcf             STATUS, C                       ; carry bit is used in the rotate command
00F9   198C           00636         btfsc   PORTA, 3                        ; select button
00FA   1403           00637         bsf             STATUS, C                       ; if the button was high set carry high. Else le
                            ave low
00FB   0CD8           00638         rrf             debounce, F                     ; rotate bit in
                      00639         ; look at last status of the button and branck to the proper code
00FC   1C5A           00640         btfss   stat, 0
00FD   2???           00641         goto    button_was_low
                      00642         ; button was last high (not pressed) wait for a press
00FE   0858           00643         movf    debounce, W
00FF   1D03           00644         btfss   STATUS, Z                       ; if Z = 1 the value of debounce is zero meaning the but
                            ton was down for at least 8 cycles
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0100   2???           00645         goto    button_no_change
0101   105A           00646         bcf             stat, 0                         ; set status to indicate button was low last
0102   0AD9           00647         incf    mode, F                         ; add one to the mode bit       
0103   0859           00648         movf    mode, W
0104   00F0           00649         movwf   gtemp                           ; save temporarily to a global var for use in the flash 
                            write seq below
                      00650         ; reset the delay timer if running. 
                      00651         ;------------------
0105   300B           00652         movlw   d'11'
0106   0088           00653         movwf   BSR             
                      00654         ;------------------
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0107   019E           00655         clrf    T0CON0                          ; turn off timer        
                      00656         ; save the new mode value to flash so it can be retrieved on power cycle
                      00657         ;------------------
0108   3010           00658         movlw   d'16'
0109   0088           00659         movwf   BSR             
                      00660         ;------------------
                      00661         ; erase row
010A   30E0           00662         movlw   LOW(mode_save)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
010B   009A           00663         movwf   NVMADRL
010C   308F           00664         movlw   HIGH(mode_save)
010D   397F           00665         andlw   0x7F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
010E   009B           00666         movwf   NVMADRH         
010F   3014           00667         movlw   0x14                        ; flash regs, erase, write enable
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0110   009E           00668         movwf   NVMCON1
0111   2???           00669         call    _unlock_flash           ; special sequence to do a write or clear to flash
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0112   111E           00670         bcf             NVMCON1, WREN           ; disable writes
                      00671         ; mode save offset      
0113   30E0           00672         movlw   LOW(mode_save)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0114   009A           00673         movwf   NVMADRL
0115   308F           00674         movlw   HIGH(mode_save)
0116   397F           00675         andlw   0x7F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0117   009B           00676         movwf   NVMADRH 
                      00677         ;point at the data buffer
0118   3024           00678         movlw   0x24                        ; flash regs, load latches only, write enable
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0119   009E           00679         movwf   NVMCON1
011A                  00680 mode_data_loop  
011A   0870           00681         movf    gtemp, W                                ; just saving the mode value to all 32 bytes. On
                            ly realy needs to be in the first one. 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
011B   009C           00682         movwf   NVMDATL                     ; load the data byte
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
011C   019D           00683         clrf    NVMDATH
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
011D   081A           00684         movf    NVMADRL, W
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011E   391F           00685         andlw   0x1F                        ; mask off the bottom 5 bits
011F   3A1F           00686         xorlw   0x1F                        ; check if = 31
0120   1903           00687         btfsc   STATUS, Z
0121   2???           00688         goto    mode_start_flash_write
0122   2???           00689         call    _unlock_flash           ; special sequence to do a write or clear to flash
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0123   0A9A           00690         incf    NVMADRL, F      
0124   2???           00691         goto    mode_data_loop
0125                  00692 mode_start_flash_write
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0125   129E           00693         bcf             NVMCON1, LWLO           ; flip the bit to do the actual write to flash vs just l
                            oading the data registers
0126   2???           00694         call    _unlock_flash           ; special sequence to do a write or clear to flash
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0127   111E           00695         bcf             NVMCON1, WREN           ; disable writes
                      00696         ;------------------
0128   0188           00697         clrf    BSR                                     ; bank 0
                      00698         ;------------------
                      00699         ; clear out the animation seq counters since a new animation was picked
0129   01DE           00700         clrf    ann_seq0
012A   01DF           00701         clrf    ann_seq1
012B   01E0           00702         clrf    ann_seq2
012C   2???           00703         goto    button_no_change
012D                  00704 button_was_low  
                      00705         ; last update the button was low (pressed) wait till it is released before restarting the press 
                            detect. 
012D   0958           00706         comf    debounce, W
012E   1D03           00707         btfss   STATUS, Z                       ; if Z = 1 the value of debounce is zero meaning the but
                            ton was down for at least 8 cycles
012F   2???           00708         goto    button_no_change
0130   145A           00709         bsf             stat, 0                         ; set status to indicate button was high last   
0131                  00710 button_no_change
                      00711         
                      00712         
                      00713         
                      00714         ; check if the delay timer is running 
                      00715         ;------------------
0131   300B           00716         movlw   d'11'
0132   0088           00717         movwf   BSR             
                      00718         ;------------------
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0133   1F9E           00719         btfss   T0CON0, 7                       ; timer on bit
0134   2???           00720         goto    delay_not_running
                      00721         ;------------------
0135   300E           00722         movlw   d'14'
0136   0088           00723         movwf   BSR             
                      00724         ;------------------
                      00725         ; if delay timer is running check if it has timed out yet
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0137   1E8C           00726         btfss   PIR0, 5
0138   2???           00727         goto    MAINLOOP                        ; hop back to the start of the loop to check the mode bu
                            tton while in a led delay. 
                      00728         ; timer has rolled over clean up and turn it off
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0139   128C           00729         bcf             PIR0, 5                         ; clear timer 0 flag
                      00730         ;------------------
013A   300B           00731         movlw   d'11'
013B   0088           00732         movwf   BSR             
                      00733         ;------------------
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
013C   019E           00734         clrf    T0CON0                          ; turn off timer        
013D                  00735 delay_not_running       
                      00736         ;------------------
013D   0188           00737         clrf    BSR                                     ; bank 0
                      00738         ;------------------
                      00739         
                      00740         
                      00741         ; check which mode we are in and use the propper pattern 
                      00742         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      00743         ; Request: Pulsing [color] with it going slightly lighter and back to full [color].
                      00744         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
013E   3007           00745         movlw   0x07                            ; check if mode is in range
013F   0259           00746         subwf   mode, W                         ; C = 0 if W > F, C = 1 W <= F  
0140   1803           00747         btfsc   STATUS, C                       ; if the result is 0 skip the jump 
0141   2???           00748         goto    not_mode0_6
                      00749         
0142   3010           00750         movlw   0x10                            ; check if over max if so reset to 0
0143   025E           00751         subwf   ann_seq0, W                     ; C = 0 if W > F, C = 1 W <= F
0144   1803           00752         btfsc   STATUS, C
0145   2???           00753         goto    mode0_ramp_down
                      00754         
                      00755 
                      00756         ; ramp up
0146   0859           00757         movf    mode, W
0147   00DF           00758         movwf   ann_seq1
0148   2???           00759         call    _pallet_cycle           ; ann_seq1 is used to control this which is = to mode in this ca
                            se      
0149   085E           00760         movf    ann_seq0, W
014A   07DD           00761         addwf   bulk_blue, F
014B   07DB           00762         addwf   bulk_red, F
014C   07DC           00763         addwf   bulk_green, F
014D   2???           00764         call    _set_all
                      00765         
014E   3010           00766         movlw   0x10                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
014F   2???           00767         call    _delay
                      00768                 
0150   0ADE           00769         incf    ann_seq0, F
                      00770         ; this value sets the max ramp rate!!!!!
0151   3005           00771         movlw   0x05                            ; check if over if so advance to the next stage
0152   025E           00772         subwf   ann_seq0, W                     ; C = 0 if W > F, C = 1 W <= F
0153   1C03           00773         btfss   STATUS, C       
0154   2???           00774         goto    MAINLOOP
                      00775         
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00776         ; if at max use a longer delay (resets the delay set up before 
0155   3010           00777         movlw   0x10                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0156   2???           00778         call    _delay  
                      00779         
                      00780         ; set seq to ramp down on next run 
0157   3010           00781         movlw   0x10
0158   04DE           00782         iorwf   ann_seq0, F
                      00783         
0159   2???           00784         goto    MAINLOOP
                      00785                 
015A                  00786 mode0_ramp_down
                      00787         ; ramp down
015A   03DD           00788         decf    bulk_blue, F
015B   03DB           00789         decf    bulk_red, F
015C   03DC           00790         decf    bulk_green, F
015D   2???           00791         call    _set_all
                      00792 
015E   3010           00793         movlw   0x10                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
015F   2???           00794         call    _delay
                      00795         
0160   03DE           00796         decf    ann_seq0, F
0161   085E           00797         movf    ann_seq0, W
0162   3A11           00798         xorlw   0x11                            ; check if over max mode if so reset to 0
0163   1D03           00799         btfss   STATUS, Z       
0164   2???           00800         goto    MAINLOOP
                      00801         
                      00802         ; if at min use a longer delay (resets the delay set up before 
0165   3020           00803         movlw   0x20                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0166   2???           00804         call    _delay
                      00805         ; reset counter to 0
0167   01DE           00806         clrf    ann_seq0
                      00807         
0168   2???           00808         goto    MAINLOOP
                      00809         
                      00810         
0169                  00811 not_mode0_6     
                      00812         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      00813         ; Request: Rotating Infinity Stone Colors around the edge with "Pulsing" yellow" in the center.
                      00814         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
0169   0859           00815         movf    mode, W                         ; grap the mode and shove it in W
016A   3A07           00816         xorlw   0x07                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
016B   1D03           00817         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
016C   2???           00818         goto    not_mode7
                      00819         
016D   01DF           00820         clrf    ann_seq1
                      00821 
016E   2???           00822         call    _inf5_cycle                     
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016F   2???           00823         call    _rotate_set_outer_ring
0170   0ADF           00824         incf    ann_seq1,F                      ; used by inf5 cycle to get color to return
0171   0AE0           00825         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00826 
                      00827         ;call   _clear_RGB
0172   2???           00828         call    _rotate_set_outer_ring
0173   0AE0           00829         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00830 
                      00831         ; triple LED
0174   2???           00832         call    _rotate_set_outer_ring
0175   0AE0           00833         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00834         
0176   2???           00835         call    _inf5_cycle
0177   2???           00836         call    _rotate_set_outer_ring
0178   0ADF           00837         incf    ann_seq1,F                      ; used by inf5 cycle to get color to return
0179   0AE0           00838         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00839 
                      00840         ;call   _clear_RGB
017A   2???           00841         call    _rotate_set_outer_ring
017B   0AE0           00842         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00843 
017C   2???           00844         call    _inf5_cycle
017D   2???           00845         call    _rotate_set_outer_ring
017E   0ADF           00846         incf    ann_seq1,F                      ; used by inf5 cycle to get color to return
017F   0AE0           00847         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00848 
                      00849         ;call   _clear_RGB
0180   2???           00850         call    _rotate_set_outer_ring
0181   0AE0           00851         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00852 
                      00853         ; triple LED
0182   2???           00854         call    _rotate_set_outer_ring
0183   0AE0           00855         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00856 
0184   2???           00857         call    _inf5_cycle
0185   2???           00858         call    _rotate_set_outer_ring
0186   0ADF           00859         incf    ann_seq1,F                      ; used by inf5 cycle to get color to return
0187   0AE0           00860         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00861 
                      00862         ;call   _clear_RGB
0188   2???           00863         call    _rotate_set_outer_ring
0189   0AE0           00864         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00865 
018A   2???           00866         call    _inf5_cycle
018B   2???           00867         call    _rotate_set_outer_ring
018C   0ADF           00868         incf    ann_seq1,F                      ; used by inf5 cycle to get color to return
018D   0AE0           00869         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00870 
                      00871         ;call   _clear_RGB
018E   2???           00872         call    _rotate_set_outer_ring
018F   0AE0           00873         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00874 
                      00875         ;call   _clear_RGB
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00876         ;call   _rotate_set_outer_ring
                      00877         ;incf   ann_seq2,F                      ; used by outer ring to pick led
                      00878 
                      00879         ;call   _rotate_set_outer_ring
                      00880         ;incf   ann_seq2,F                      ; used by outer ring to pick led
                      00881         
                      00882         ; this check is to prevent the display from getting stuck since the rotate == the number of leds
                            . 
0190   300C           00883         movlw   0x0C                            ; if greater than 12 rest to 0
0191   0260           00884         subwf   ann_seq2, W                     ; C = 0 if W > F, C = 1 W <= F
0192   1803           00885         btfsc   STATUS, C       
0193   01E0           00886         clrf    ann_seq2        
0194                  00887 not_mode7_skip  
0194   0AE0           00888         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00889         
                      00890         ; yellow pulse
0195   30FF           00891         movlw   0xFF    
0196   00B3           00892         movwf   led8r
0197   00B4           00893         movwf   led8g
0198   00B6           00894         movwf   led9r
0199   00B7           00895         movwf   led9g
019A   00C2           00896         movwf   led15r
019B   00C3           00897         movwf   led15g
                      00898 
                      00899         
019C   3010           00900         movlw   0x10                            ; check if over max if so reset to 0
019D   025E           00901         subwf   ann_seq0, W                     ; C = 0 if W > F, C = 1 W <= F
019E   1803           00902         btfsc   STATUS, C
019F   2???           00903         goto    mode7_ramp_down 
                      00904         
                      00905         ; ramp up
01A0   085E           00906         movf    ann_seq0, W
01A1   00B5           00907         movwf   led8b
01A2   00B8           00908         movwf   led9b
01A3   00C4           00909         movwf   led15b  
01A4   0ADE           00910         incf    ann_seq0, F
                      00911         ; this value sets the max ramp rate!!!!!
01A5   3008           00912         movlw   0x08                            ; check if over max mode if so reset to 0
01A6   025E           00913         subwf   ann_seq0, W                     ; C = 0 if W > F, C = 1 W <= F
01A7   1C03           00914         btfss   STATUS, C       
01A8   2???           00915         goto    mode7_done
                      00916         ; set seq to ramp down on next run 
01A9   3010           00917         movlw   0x10
01AA   04DE           00918         iorwf   ann_seq0, F
01AB   2???           00919         goto    mode7_done
                      00920                 
01AC                  00921 mode7_ramp_down
                      00922         ; ramp down
01AC   085E           00923         movf    ann_seq0, W                     ; invert value 
01AD   390F           00924         andlw   0x0F                            ; mask off upper bits 
01AE   00B5           00925         movwf   led8b
01AF   00B8           00926         movwf   led9b
01B0   00C4           00927         movwf   led15b  
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B1   03DE           00928         decf    ann_seq0, F
01B2   085E           00929         movf    ann_seq0, W
01B3   3A10           00930         xorlw   0x10                            ; check if over max mode if so reset to 0
01B4   1D03           00931         btfss   STATUS, Z       
01B5   2???           00932         goto    mode7_done      
                      00933         ; reset counter to 0
01B6   01DE           00934         clrf    ann_seq0
                      00935 
01B7                  00936 mode7_done      
01B7   3008           00937         movlw   0x08                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
01B8   2???           00938         call    _delay
                      00939 
01B9   2???           00940         goto    MAINLOOP
                      00941         
01BA                  00942 not_mode7       
                      00943         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      00944         ; found this animation while working on the previous one looked oool so lef it in. Chasing stone
                            s
                      00945         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
01BA   0859           00946         movf    mode, W                         ; grap the mode and shove it in W
01BB   3A08           00947         xorlw   0x08                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
01BC   1D03           00948         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
01BD   2???           00949         goto    not_mode8
                      00950         
01BE   2???           00951         call    _inf5_cycle
01BF   2???           00952         call    _rotate_set_outer_ring
01C0   0ADF           00953         incf    ann_seq1,F                      ; used by inf5 cycle to get color to return
01C1   0AE0           00954         incf    ann_seq2,F                      ; used by outer ring to pick led
                      00955         
                      00956         
01C2   30FF           00957         movlw   0xff    
01C3   00DB           00958         movwf   bulk_red
01C4   00DC           00959         movwf   bulk_green
01C5   01DD           00960         clrf    bulk_blue
01C6   085E           00961         movf    ann_seq0, W
01C7   3901           00962         andlw   0x01
01C8   1D03           00963         btfss   STATUS, Z
01C9   2???           00964         goto    not_mode8_skip
01CA   3008           00965         movlw   0x08
01CB   00DD           00966         movwf   bulk_blue       
01CC                  00967 not_mode8_skip  
01CC   2???           00968         call    _rotate_set_inner_ring_ccw
01CD   0ADE           00969         incf    ann_seq0,F                      ; toss in a bight led every 4 (1 more than previous upda
                            te)
01CE   0AE1           00970         incf    ann_seq3,F                      ; used by inner ring to pick led
                      00971                         
01CF   3004           00972         movlw   0x04                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
01D0   2???           00973         call    _delay
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00974         
01D1   2???           00975         goto    MAINLOOP
                      00976 
01D2                  00977 not_mode8       
                      00978         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      00979         ; set LEDS to random values 
                      00980         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
01D2   0859           00981         movf    mode, W                         ; grap the mode and shove it in W
01D3   3A09           00982         xorlw   0x09                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
01D4   1D03           00983         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
01D5   2???           00984         goto    not_mode9
                      00985 
01D6   3012           00986         movlw   0x12                            ; if greater than 12 rest to 0
01D7   025E           00987         subwf   ann_seq0, W                     ; C = 0 if W > F, C = 1 W <= F
01D8   1803           00988         btfsc   STATUS, C       
01D9   01DE           00989         clrf    ann_seq0        
                      00990         
01DA   0187           00991         clrf    FSR1H                           ; set up indirect register to start of led bank
01DB   3021           00992         movlw   led1r                           ; start of LED regs
01DC   0086           00993         movwf   FSR1L
01DD   085E           00994         movf    ann_seq0, W
Message[305]: Using default destination of 1 (file).
01DE   0786           00995         addwf   FSR1L                           ; add 3x seq number 
Message[305]: Using default destination of 1 (file).
01DF   0786           00996         addwf   FSR1L                           ; add 3x seq number 
Message[305]: Using default destination of 1 (file).
01E0   0786           00997         addwf   FSR1L                           ; add 3x seq number 
                      00998                 
01E1   2???           00999         call    _CYCLE_LFSR     
01E2   390F           01000         andlw   0x0F
01E3   001E           01001         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
01E4   2???           01002         call    _CYCLE_LFSR     
01E5   390F           01003         andlw   0x0F
01E6   001E           01004         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
01E7   2???           01005         call    _CYCLE_LFSR     
01E8   390F           01006         andlw   0x0F
01E9   001E           01007         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
                      01008         
01EA   0ADE           01009         incf    ann_seq0, F
                      01010 
                      01011         ;movlw  0x02                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
                      01012         ;call   _delay  
                      01013         
01EB   2???           01014         goto    MAINLOOP
                      01015 
                      01016         
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01EC                  01017 not_mode9       
                      01018         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01019         ; request Chasing Light where one solid color rotates around the LEDs. 2 red 2 blue outer ring r
                            otate white center
                      01020         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
01EC   0859           01021         movf    mode, W                         ; grap the mode and shove it in W
01ED   3A0A           01022         xorlw   0x0A                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
01EE   1D03           01023         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
01EF   2???           01024         goto    not_modeA
                      01025         
                      01026 
                      01027         ; preset ring loop with offset
01F0   085F           01028         movf    ann_seq1, W
01F1   00E0           01029         movwf   ann_seq2
                      01030 
01F2   3003           01031         movlw   0x03                            
01F3   00DE           01032         movwf   ann_seq0
01F4                  01033 modeA_loop
01F4   30FF           01034         movlw   0xff    
01F5   00DB           01035         movwf   bulk_red
01F6   01DC           01036         clrf    bulk_green
01F7   01DD           01037         clrf    bulk_blue
01F8   2???           01038         call    _rotate_set_outer_ring
01F9   0AE0           01039         incf    ann_seq2,F                      ; used by outer ring to pick led
01FA   2???           01040         call    _rotate_set_outer_ring
01FB   0AE0           01041         incf    ann_seq2,F                      ; used by outer ring to pick led
01FC   30FF           01042         movlw   0xff    
01FD   01DB           01043         clrf    bulk_red
01FE   01DC           01044         clrf    bulk_green
01FF   00DD           01045         movwf   bulk_blue
0200   2???           01046         call    _rotate_set_outer_ring
0201   0AE0           01047         incf    ann_seq2,F                      ; used by outer ring to pick led
0202   2???           01048         call    _rotate_set_outer_ring
0203   0AE0           01049         incf    ann_seq2,F                      ; used by outer ring to pick led
0204   0BDE           01050         decfsz  ann_seq0, F
0205   2???           01051         goto    modeA_loop
                      01052         ; shift next run by 1 led
0206   0ADF           01053         incf    ann_seq1,F                      ; used by outer ring to pick led
0207   085F           01054         movf    ann_seq1,W                      ; check if over 11 if so reset
0208   300C           01055         movlw   0x0C
0209   025F           01056         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
020A   1803           01057         btfsc   STATUS, C       
020B   01DF           01058         clrf    ann_seq1        
                      01059         
020C   30FF           01060         movlw   0xff    
020D   00DB           01061         movwf   bulk_red
020E   00DC           01062         movwf   bulk_green
020F   00DD           01063         movwf   bulk_blue
0210   2???           01064         call    _rotate_set_inner_ring_ccw
0211   0AE1           01065         incf    ann_seq3,F                      ; used by inner ring to pick led
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01066 
0212   3008           01067         movlw   0x08                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0213   2???           01068         call    _delay
                      01069         
0214   2???           01070         goto    MAINLOOP
                      01071 
0215                  01072 not_modeA       
                      01073         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01074         ; request Chasing Light where one solid color rotates around the LEDs. 2 yellow 2 red outer ring
                             rotate blue center
                      01075         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
0215   0859           01076         movf    mode, W                         ; grap the mode and shove it in W
0216   3A0B           01077         xorlw   0x0B                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
0217   1D03           01078         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
0218   2???           01079         goto    not_modeB
                      01080         
                      01081 
                      01082         ; preset ring loop with offset
0219   085F           01083         movf    ann_seq1, W
021A   00E0           01084         movwf   ann_seq2
                      01085 
021B   3003           01086         movlw   0x03                            
021C   00DE           01087         movwf   ann_seq0
021D                  01088 modeB_loop
021D   30FF           01089         movlw   0xff    
021E   00DB           01090         movwf   bulk_red
021F   00DC           01091         movwf   bulk_green
0220   01DD           01092         clrf    bulk_blue
0221   2???           01093         call    _rotate_set_outer_ring
0222   0AE0           01094         incf    ann_seq2,F                      ; used by outer ring to pick led
0223   2???           01095         call    _rotate_set_outer_ring
0224   0AE0           01096         incf    ann_seq2,F                      ; used by outer ring to pick led
0225   30FF           01097         movlw   0xff    
0226   00DB           01098         movwf   bulk_red
0227   01DC           01099         clrf    bulk_green
0228   01DD           01100         clrf    bulk_blue
0229   2???           01101         call    _rotate_set_outer_ring
022A   0AE0           01102         incf    ann_seq2,F                      ; used by outer ring to pick led
022B   2???           01103         call    _rotate_set_outer_ring
022C   0AE0           01104         incf    ann_seq2,F                      ; used by outer ring to pick led
022D   0BDE           01105         decfsz  ann_seq0, F
022E   2???           01106         goto    modeB_loop
                      01107         ; shift next run by 1 led
022F   0ADF           01108         incf    ann_seq1,F                      ; used by outer ring to pick led
0230   085F           01109         movf    ann_seq1,W                      ; check if over 11 if so reset
0231   300C           01110         movlw   0x0C
0232   025F           01111         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
0233   1803           01112         btfsc   STATUS, C       
0234   01DF           01113         clrf    ann_seq1        
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01114         
0235   30FF           01115         movlw   0xff    
0236   01DB           01116         clrf    bulk_red
0237   01DC           01117         clrf    bulk_green
0238   00DD           01118         movwf   bulk_blue
0239   2???           01119         call    _rotate_set_inner_ring_ccw
023A   0AE1           01120         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01121 
023B   3008           01122         movlw   0x08                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
023C   2???           01123         call    _delay
                      01124         
023D   2???           01125         goto    MAINLOOP
                      01126 
023E                  01127 not_modeB       
                      01128         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01129         ; request Chasing Light where one solid color rotates around the LEDs. 2 green 2 purple outer ri
                            ng rotate white center
                      01130         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
023E   0859           01131         movf    mode, W                         ; grap the mode and shove it in W
023F   3A0C           01132         xorlw   0x0C                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
0240   1D03           01133         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
0241   2???           01134         goto    not_modeC
                      01135         
                      01136 
                      01137         ; preset ring loop with offset
0242   085F           01138         movf    ann_seq1, W
0243   00E0           01139         movwf   ann_seq2
                      01140 
0244   3003           01141         movlw   0x03                            
0245   00DE           01142         movwf   ann_seq0
0246                  01143 modeC_loop
0246   30FF           01144         movlw   0xff    
0247   01DB           01145         clrf    bulk_red
0248   00DC           01146         movwf   bulk_green
0249   01DD           01147         clrf    bulk_blue
024A   2???           01148         call    _rotate_set_outer_ring
024B   0AE0           01149         incf    ann_seq2,F                      ; used by outer ring to pick led
024C   2???           01150         call    _rotate_set_outer_ring
024D   0AE0           01151         incf    ann_seq2,F                      ; used by outer ring to pick led
024E   30FF           01152         movlw   0xff    
024F   00DB           01153         movwf   bulk_red
0250   01DC           01154         clrf    bulk_green
0251   00DD           01155         movwf   bulk_blue
0252   2???           01156         call    _rotate_set_outer_ring
0253   0AE0           01157         incf    ann_seq2,F                      ; used by outer ring to pick led
0254   2???           01158         call    _rotate_set_outer_ring
0255   0AE0           01159         incf    ann_seq2,F                      ; used by outer ring to pick led
0256   0BDE           01160         decfsz  ann_seq0, F
0257   2???           01161         goto    modeC_loop
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01162         ; shift next run by 1 led
0258   0ADF           01163         incf    ann_seq1,F                      ; used by outer ring to pick led
0259   085F           01164         movf    ann_seq1,W                      ; check if over 11 if so reset
025A   300C           01165         movlw   0x0C
025B   025F           01166         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
025C   1803           01167         btfsc   STATUS, C       
025D   01DF           01168         clrf    ann_seq1        
                      01169         
025E   30FF           01170         movlw   0xff    
025F   00DB           01171         movwf   bulk_red
0260   00DC           01172         movwf   bulk_green
0261   00DD           01173         movwf   bulk_blue
0262   2???           01174         call    _rotate_set_inner_ring_ccw
0263   0AE1           01175         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01176 
0264   3008           01177         movlw   0x08                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0265   2???           01178         call    _delay
                      01179         
0266   2???           01180         goto    MAINLOOP
                      01181 
0267                  01182 not_modeC       
                      01183         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01184         ; request Chasing Light where one solid color rotates around the LEDs. 2 blue 2 white outer ring
                             rotate red center
                      01185         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
0267   0859           01186         movf    mode, W                         ; grap the mode and shove it in W
0268   3A0D           01187         xorlw   0x0D                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
0269   1D03           01188         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
026A   2???           01189         goto    not_modeD
                      01190         
                      01191 
                      01192         ; preset ring loop with offset
026B   085F           01193         movf    ann_seq1, W
026C   00E0           01194         movwf   ann_seq2
                      01195 
026D   3003           01196         movlw   0x03                            
026E   00DE           01197         movwf   ann_seq0
026F                  01198 modeD_loop
026F   30FF           01199         movlw   0xff    
0270   01DB           01200         clrf    bulk_red
0271   01DC           01201         clrf    bulk_green
0272   00DD           01202         movwf   bulk_blue
0273   2???           01203         call    _rotate_set_outer_ring
0274   0AE0           01204         incf    ann_seq2,F                      ; used by outer ring to pick led
0275   2???           01205         call    _rotate_set_outer_ring
0276   0AE0           01206         incf    ann_seq2,F                      ; used by outer ring to pick led
0277   30FF           01207         movlw   0xff    
0278   00DB           01208         movwf   bulk_red
0279   00DC           01209         movwf   bulk_green
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027A   305D           01210         movlw   bulk_blue
027B   2???           01211         call    _rotate_set_outer_ring
027C   0AE0           01212         incf    ann_seq2,F                      ; used by outer ring to pick led
027D   2???           01213         call    _rotate_set_outer_ring
027E   0AE0           01214         incf    ann_seq2,F                      ; used by outer ring to pick led
027F   0BDE           01215         decfsz  ann_seq0, F
0280   2???           01216         goto    modeD_loop
                      01217         ; shift next run by 1 led
0281   0ADF           01218         incf    ann_seq1,F                      ; used by outer ring to pick led
0282   085F           01219         movf    ann_seq1,W                      ; check if over 11 if so reset
0283   300C           01220         movlw   0x0C
0284   025F           01221         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
0285   1803           01222         btfsc   STATUS, C       
0286   01DF           01223         clrf    ann_seq1        
                      01224         
0287   30FF           01225         movlw   0xff    
0288   00DB           01226         movwf   bulk_red
0289   01DC           01227         clrf    bulk_green
028A   01DD           01228         clrf    bulk_blue
028B   2???           01229         call    _rotate_set_inner_ring_ccw
028C   0AE1           01230         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01231 
028D   3008           01232         movlw   0x08                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
028E   2???           01233         call    _delay
                      01234         
028F   2???           01235         goto    MAINLOOP
                      01236 
0290                  01237 not_modeD
                      01238         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01239         ; request Chasing Light where one solid color rotates around the LEDs. 2 blue 2 purple outer rin
                            g rotate white center
                      01240         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
0290   0859           01241         movf    mode, W                         ; grap the mode and shove it in W
0291   3A0E           01242         xorlw   0x0E                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
0292   1D03           01243         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
0293   2???           01244         goto    not_modeE
                      01245         
                      01246 
                      01247         ; preset ring loop with offset
0294   085F           01248         movf    ann_seq1, W
0295   00E0           01249         movwf   ann_seq2
                      01250 
0296   3003           01251         movlw   0x03                            
0297   00DE           01252         movwf   ann_seq0
0298                  01253 modeE_loop
0298   30FF           01254         movlw   0xff    
0299   01DB           01255         clrf    bulk_red
029A   01DC           01256         clrf    bulk_green
029B   00DD           01257         movwf   bulk_blue
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029C   2???           01258         call    _rotate_set_outer_ring
029D   0AE0           01259         incf    ann_seq2,F                      ; used by outer ring to pick led
029E   2???           01260         call    _rotate_set_outer_ring
029F   0AE0           01261         incf    ann_seq2,F                      ; used by outer ring to pick led
02A0   30FF           01262         movlw   0xff    
02A1   00DB           01263         movwf   bulk_red
02A2   01DC           01264         clrf    bulk_green
02A3   00DD           01265         movwf   bulk_blue
02A4   2???           01266         call    _rotate_set_outer_ring
02A5   0AE0           01267         incf    ann_seq2,F                      ; used by outer ring to pick led
02A6   2???           01268         call    _rotate_set_outer_ring
02A7   0AE0           01269         incf    ann_seq2,F                      ; used by outer ring to pick led
02A8   0BDE           01270         decfsz  ann_seq0, F
02A9   2???           01271         goto    modeE_loop
                      01272         ; shift next run by 1 led
02AA   0ADF           01273         incf    ann_seq1,F                      ; used by outer ring to pick led
02AB   085F           01274         movf    ann_seq1,W                      ; check if over 11 if so reset
02AC   300C           01275         movlw   0x0C
02AD   025F           01276         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
02AE   1803           01277         btfsc   STATUS, C       
02AF   01DF           01278         clrf    ann_seq1        
                      01279         
02B0   30FF           01280         movlw   0xff    
02B1   00DB           01281         movwf   bulk_red
02B2   00DC           01282         movwf   bulk_green
02B3   00DD           01283         movwf   bulk_blue
02B4   2???           01284         call    _rotate_set_inner_ring_ccw
02B5   0AE1           01285         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01286 
02B6   3008           01287         movlw   0x08                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
02B7   2???           01288         call    _delay
                      01289         
02B8   2???           01290         goto    MAINLOOP
                      01291 
02B9                  01292 not_modeE
                      01293         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01294         ; request Chasing Light where one solid color rotates around the LEDs. 2 red 2 white outer ring 
                            rotate green center
                      01295         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
02B9   0859           01296         movf    mode, W                         ; grap the mode and shove it in W
02BA   3A0F           01297         xorlw   0x0F                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
02BB   1D03           01298         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
02BC   2???           01299         goto    not_modeF
                      01300         
                      01301 
                      01302         ; preset ring loop with offset
02BD   085F           01303         movf    ann_seq1, W
02BE   00E0           01304         movwf   ann_seq2
                      01305 
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BF   3003           01306         movlw   0x03                            
02C0   00DE           01307         movwf   ann_seq0
02C1                  01308 modeF_loop
02C1   30FF           01309         movlw   0xff    
02C2   00DB           01310         movwf   bulk_red
02C3   01DC           01311         clrf    bulk_green
02C4   01DD           01312         clrf    bulk_blue
02C5   2???           01313         call    _rotate_set_outer_ring
02C6   0AE0           01314         incf    ann_seq2,F                      ; used by outer ring to pick led
02C7   2???           01315         call    _rotate_set_outer_ring
02C8   0AE0           01316         incf    ann_seq2,F                      ; used by outer ring to pick led
02C9   30FF           01317         movlw   0xff    
02CA   00DB           01318         movwf   bulk_red
02CB   00DC           01319         movwf   bulk_green
02CC   00DD           01320         movwf   bulk_blue
02CD   2???           01321         call    _rotate_set_outer_ring
02CE   0AE0           01322         incf    ann_seq2,F                      ; used by outer ring to pick led
02CF   2???           01323         call    _rotate_set_outer_ring
02D0   0AE0           01324         incf    ann_seq2,F                      ; used by outer ring to pick led
02D1   0BDE           01325         decfsz  ann_seq0, F
02D2   2???           01326         goto    modeF_loop
                      01327         ; shift next run by 1 led
02D3   0ADF           01328         incf    ann_seq1,F                      ; used by outer ring to pick led
02D4   085F           01329         movf    ann_seq1,W                      ; check if over 11 if so reset
02D5   300C           01330         movlw   0x0C
02D6   025F           01331         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
02D7   1803           01332         btfsc   STATUS, C       
02D8   01DF           01333         clrf    ann_seq1        
                      01334         
02D9   30FF           01335         movlw   0xff    
02DA   01DB           01336         clrf    bulk_red
02DB   00DC           01337         movwf   bulk_green
02DC   01DD           01338         clrf    bulk_blue
02DD   2???           01339         call    _rotate_set_inner_ring_ccw
02DE   0AE1           01340         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01341 
02DF   3008           01342         movlw   0x08                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
02E0   2???           01343         call    _delay
                      01344         
02E1   2???           01345         goto    MAINLOOP
                      01346 
02E2                  01347 not_modeF       
                      01348         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01349         ; screwed up above but looked cool. 
                      01350         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
02E2   0859           01351         movf    mode, W                         ; grap the mode and shove it in W
02E3   3A10           01352         xorlw   0x10                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
02E4   1D03           01353         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
02E5   2???           01354         goto    not_mode10
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01355 
                      01356         
02E6   30FF           01357         movlw   0xff    
02E7   00DB           01358         movwf   bulk_red
02E8   01DC           01359         clrf    bulk_green
02E9   01DD           01360         clrf    bulk_blue
02EA   2???           01361         call    _rotate_set_outer_ring
02EB   0AE0           01362         incf    ann_seq2,F                      ; used by outer ring to pick led
02EC   30FF           01363         movlw   0xff    
02ED   00DB           01364         movwf   bulk_red
02EE   00DC           01365         movwf   bulk_green
02EF   00DD           01366         movwf   bulk_blue
02F0   2???           01367         call    _rotate_set_outer_ring
                      01368                 
02F1   30FF           01369         movlw   0xff    
02F2   01DB           01370         clrf    bulk_red
02F3   01DC           01371         clrf    bulk_green
02F4   00DD           01372         movwf   bulk_blue
02F5   2???           01373         call    _rotate_set_inner_ring_ccw
02F6   0AE1           01374         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01375 
02F7   3004           01376         movlw   0x04                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
02F8   2???           01377         call    _delay
                      01378         
02F9   2???           01379         goto    MAINLOOP
                      01380         
02FA                  01381 not_mode10      
                      01382         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01383         ; screwed up above but looked cool. 
                      01384         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
02FA   0859           01385         movf    mode, W                         ; grap the mode and shove it in W
02FB   3A11           01386         xorlw   0x11                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
02FC   1D03           01387         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
02FD   2???           01388         goto    not_mode11
                      01389 
                      01390         
                      01391         ;outer
02FE   30FF           01392         movlw   0xff    
02FF   00DB           01393         movwf   bulk_red
0300   01DC           01394         clrf    bulk_green
0301   01DD           01395         clrf    bulk_blue
0302   2???           01396         call    _rotate_set_outer_ring
0303   0AE0           01397         incf    ann_seq2,F                      ; used by outer ring to pick led
                      01398         ; chase
0304   30FF           01399         movlw   0xff    
0305   01DB           01400         clrf    bulk_red
0306   01DC           01401         clrf    bulk_green
0307   00DD           01402         movwf   bulk_blue
0308   2???           01403         call    _rotate_set_outer_ring
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01404         ; inner 
0309   30FF           01405         movlw   0xff    
030A   00DB           01406         movwf   bulk_red
030B   00DC           01407         movwf   bulk_green
030C   01DD           01408         clrf    bulk_blue
030D   2???           01409         call    _rotate_set_inner_ring_ccw
030E   0AE1           01410         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01411 
030F   3004           01412         movlw   0x04                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0310   2???           01413         call    _delay
                      01414         
0311   2???           01415         goto    MAINLOOP
                      01416         
0312                  01417 not_mode11
                      01418         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01419         ; screwed up above but looked cool. 
                      01420         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
0312   0859           01421         movf    mode, W                         ; grap the mode and shove it in W
0313   3A12           01422         xorlw   0x12                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
0314   1D03           01423         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
0315   2???           01424         goto    not_mode12
                      01425 
                      01426         
                      01427         ;outer
0316   30FF           01428         movlw   0xff    
0317   00DB           01429         movwf   bulk_red
0318   01DC           01430         clrf    bulk_green
0319   00DD           01431         movwf   bulk_blue
031A   2???           01432         call    _rotate_set_outer_ring
031B   0AE0           01433         incf    ann_seq2,F                      ; used by outer ring to pick led
                      01434         ; chase
031C   30FF           01435         movlw   0xff    
031D   00DB           01436         movwf   bulk_red
031E   00DC           01437         movwf   bulk_green
031F   00DD           01438         movwf   bulk_blue
0320   2???           01439         call    _rotate_set_outer_ring
                      01440         ; inner 
0321   30FF           01441         movlw   0xff    
0322   01DB           01442         clrf    bulk_red
0323   00DC           01443         movwf   bulk_green
0324   01DD           01444         clrf    bulk_blue
0325   2???           01445         call    _rotate_set_inner_ring_ccw
0326   0AE1           01446         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01447 
0327   3004           01448         movlw   0x04                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0328   2???           01449         call    _delay
                      01450         
0329   2???           01451         goto    MAINLOOP
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01452         
032A                  01453 not_mode12
                      01454         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01455         ; screwed up above but looked cool. 
                      01456         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
032A   0859           01457         movf    mode, W                         ; grap the mode and shove it in W
032B   3A13           01458         xorlw   0x13                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
032C   1D03           01459         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
032D   2???           01460         goto    not_mode13
                      01461 
                      01462         
                      01463         ;outer
032E   30FF           01464         movlw   0xff    
032F   00DB           01465         movwf   bulk_red
0330   00DC           01466         movwf   bulk_green
0331   00DD           01467         movwf   bulk_blue
0332   2???           01468         call    _rotate_set_outer_ring
0333   0AE0           01469         incf    ann_seq2,F                      ; used by outer ring to pick led
                      01470         ; chase
0334   30FF           01471         movlw   0xff    
0335   00DB           01472         movwf   bulk_red
0336   01DC           01473         clrf    bulk_green
0337   01DD           01474         clrf    bulk_blue
0338   2???           01475         call    _rotate_set_outer_ring
                      01476         ; inner 
0339   30FF           01477         movlw   0xff    
033A   01DB           01478         clrf    bulk_red
033B   01DC           01479         clrf    bulk_green
033C   00DD           01480         movwf   bulk_blue
033D   2???           01481         call    _rotate_set_inner_ring_ccw
033E   0AE1           01482         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01483 
033F   3004           01484         movlw   0x04                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0340   2???           01485         call    _delay
                      01486         
0341   2???           01487         goto    MAINLOOP
                      01488         
0342                  01489 not_mode13
                      01490         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01491         ; screwed up above but looked cool. 
                      01492         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
0342   0859           01493         movf    mode, W                         ; grap the mode and shove it in W
0343   3A14           01494         xorlw   0x14                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
0344   1D03           01495         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
0345   2???           01496         goto    not_mode14
                      01497 
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01498         
                      01499         ;outer
0346   30FF           01500         movlw   0xff    
0347   00DB           01501         movwf   bulk_red
0348   01DC           01502         clrf    bulk_green
0349   00DD           01503         movwf   bulk_blue
034A   2???           01504         call    _rotate_set_outer_ring
034B   0AE0           01505         incf    ann_seq2,F                      ; used by outer ring to pick led
                      01506         ; chase
034C   30FF           01507         movlw   0xff    
034D   00DB           01508         movwf   bulk_red
034E   00DC           01509         movwf   bulk_green
034F   00DD           01510         movwf   bulk_blue
0350   2???           01511         call    _rotate_set_outer_ring
                      01512         ; inner 
0351   30FF           01513         movlw   0xff    
0352   01DB           01514         clrf    bulk_red
0353   01DC           01515         clrf    bulk_green
0354   00DD           01516         movwf   bulk_blue
0355   2???           01517         call    _rotate_set_inner_ring_ccw
0356   0AE1           01518         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01519 
0357   3004           01520         movlw   0x04                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0358   2???           01521         call    _delay
                      01522         
0359   2???           01523         goto    MAINLOOP
                      01524         
035A                  01525 not_mode14
                      01526         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01527         ; screwed up above but looked cool. 
                      01528         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
035A   0859           01529         movf    mode, W                         ; grap the mode and shove it in W
035B   3A15           01530         xorlw   0x15                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
035C   1D03           01531         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
035D   2???           01532         goto    not_mode15
                      01533 
                      01534         
                      01535         ;outer
035E   30FF           01536         movlw   0xff    
035F   00DB           01537         movwf   bulk_red
0360   00DC           01538         movwf   bulk_green
0361   00DD           01539         movwf   bulk_blue
0362   2???           01540         call    _rotate_set_outer_ring
0363   0AE0           01541         incf    ann_seq2,F                      ; used by outer ring to pick led
                      01542         ; chase
0364   30FF           01543         movlw   0xff    
0365   01DB           01544         clrf    bulk_red
0366   00DC           01545         movwf   bulk_green
0367   01DD           01546         clrf    bulk_blue
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0368   2???           01547         call    _rotate_set_outer_ring
                      01548         ; inner 
0369   30FF           01549         movlw   0xff    
036A   00DB           01550         movwf   bulk_red
036B   01DC           01551         clrf    bulk_green
036C   01DD           01552         clrf    bulk_blue
036D   2???           01553         call    _rotate_set_inner_ring_ccw
036E   0AE1           01554         incf    ann_seq3,F                      ; used by inner ring to pick led
                      01555 
036F   3004           01556         movlw   0x04                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
0370   2???           01557         call    _delay
                      01558         
0371   2???           01559         goto    MAINLOOP
                      01560         
0372                  01561 not_mode15
                      01562         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01563         ; Request: solid colors
                      01564         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
0372   301D           01565         movlw   0x1D                            ; check if mode is in range
0373   0259           01566         subwf   mode, W                         ; C = 0 if W > F, C = 1 W <= F  
0374   1803           01567         btfsc   STATUS, C                       ; if the result is 0 skip the jump 
0375   2???           01568         goto    not_mode16_1C
                      01569         
0376   0859           01570         movf    mode, W
0377   00DF           01571         movwf   ann_seq1
0378   3016           01572         movlw   0x16
0379   02DF           01573         subwf   ann_seq1, F
037A   2???           01574         call    _pallet_cycle           ; ann_seq1 is used to control this which is = to mode in this ca
                            se      
037B   2???           01575         call    _set_all
                      01576 
037C   30FF           01577         movlw   0xFF                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
037D   2???           01578         call    _delay
                      01579         
037E   2???           01580         goto    MAINLOOP        
                      01581         
                      01582         
037F                  01583 not_mode16_1C
                      01584         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01585         ; Rainbow!
                      01586         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
037F   0859           01587         movf    mode, W                         ; grap the mode and shove it in W
0380   3A1D           01588         xorlw   0x1D                            ; exclusive or value with W (if W == value then the resu
                            lt will be 0) 
0381   1D03           01589         btfss   STATUS, Z                       ; if the result is 0 skip the jump 
0382   2???           01590         goto    not_mode1D
                      01591         
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0383   2???           01592         call    _rainbow_cycle
0384   2???           01593         call    _rotate_set_outer_ring
0385   2???           01594         call    _rotate_set_inner_ring_ccw
0386   0AE1           01595         incf    ann_seq3,F                      ; used by inner ring to pick led
0387   0AE0           01596         incf    ann_seq2,F                      ; used by outer ring to pick led
0388   0ADF           01597         incf    ann_seq1, F                     ; used by rainbow code  
                      01598         
0389   3004           01599         movlw   0x04                            ; delay value from 0.017s to ~4.2s in 256 steps (0.017s 
                            per step)
038A   2???           01600         call    _delay
                      01601         
038B   2???           01602         goto    MAINLOOP        
                      01603         
                      01604         
                      01605 
038C                  01606 not_mode1D
                      01607         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------
                      01608         ; mode greater than the max value reset to 0
                      01609         ; ----------------------------------------------------------------------------------------------
                            ----------------------------------------------------    
038C   01D9           01610         clrf    mode    
038D   2???           01611         goto    MAINLOOP
                      01612         
038E                  01613 ENDLOOP
                      01614         ; this is a catch and stop loop used for debug and in case something above goes wild.... 
038E   2???           01615         goto    ENDLOOP
                      01616 
                      01617         
                      01618 
                      01619 ;################################################################################
                      01620 ;_pwm_values
                      01621 ;       andlw   0x0F
                      01622 ;       brw             
                      01623 ;       retlw   0x00
                      01624 ;       retlw   0x01
                      01625 ;       retlw   0x03
                      01626 ;       retlw   0x07
                      01627 ;       retlw   0x0B
                      01628 ;       retlw   0x12
                      01629 ;       retlw   0x1E
                      01630 ;       retlw   0x28
                      01631 ;       retlw   0x32
                      01632 ;       retlw   0x41
                      01633 ;       retlw   0x50
                      01634 ;       retlw   0x64
                      01635 ;       retlw   0x7D
                      01636 ;       retlw   0xA0
                      01637 ;       retlw   0xC8
                      01638 ;       retlw   0xFF
                      01639 ;       
                      01640 ;       return
                      01641         
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01642 ;################################################################################
                      01643 ; Based on ann_seq1 return RGB values for 5 of 6 inf stone colors
                      01644 ;################################################################################
038F                  01645 _pallet_cycle
                      01646         
038F   3007           01647         movlw   0x07                            ; if greater than 4 rest to 0
0390   025F           01648         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
0391   1803           01649         btfsc   STATUS, C       
0392   01DF           01650         clrf    ann_seq1
                      01651         
0393   085F           01652         movf    ann_seq1, W
0394   1D03           01653         btfss   STATUS, Z
0395   2???           01654         goto    _pallet_cycle_not_blue
0396   01DB           01655         clrf    bulk_red
0397   01DC           01656         clrf    bulk_green
0398   3010           01657         movlw   0x10
0399   00DD           01658         movwf   bulk_blue
039A   0008           01659         return
                      01660         
039B                  01661 _pallet_cycle_not_blue
039B   085F           01662         movf    ann_seq1, W
039C   3A01           01663         xorlw   0x01
039D   1D03           01664         btfss   STATUS, Z
039E   2???           01665         goto    _pallet_cycle_not_green
039F   01DB           01666         clrf    bulk_red
03A0   3010           01667         movlw   0x10
03A1   00DC           01668         movwf   bulk_green
03A2   01DD           01669         clrf    bulk_blue
03A3   0008           01670         return
                      01671         
03A4                  01672 _pallet_cycle_not_green 
03A4   085F           01673         movf    ann_seq1, W
03A5   3A02           01674         xorlw   0x02
03A6   1D03           01675         btfss   STATUS, Z
03A7   2???           01676         goto    _pallet_cycle_not_red
03A8   3010           01677         movlw   0x10
03A9   00DB           01678         movwf   bulk_red
03AA   01DC           01679         clrf    bulk_green
03AB   01DD           01680         clrf    bulk_blue
03AC   0008           01681         return
                      01682         
03AD                  01683 _pallet_cycle_not_red   
03AD   085F           01684         movf    ann_seq1, W
03AE   3A03           01685         xorlw   0x03
03AF   1D03           01686         btfss   STATUS, Z
03B0   2???           01687         goto    _pallet_cycle_not_yellow
03B1   3010           01688         movlw   0x10
03B2   00DB           01689         movwf   bulk_red
03B3   00DC           01690         movwf   bulk_green
03B4   01DD           01691         clrf    bulk_blue
03B5   0008           01692         return
                      01693 
03B6                  01694 _pallet_cycle_not_yellow
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B6   085F           01695         movf    ann_seq1, W
03B7   3A04           01696         xorlw   0x04
03B8   1D03           01697         btfss   STATUS, Z
03B9   2???           01698         goto    _pallet_cycle_not_pur
03BA   3010           01699         movlw   0x10
03BB   00DB           01700         movwf   bulk_red
03BC   01DC           01701         clrf    bulk_green
03BD   00DD           01702         movwf   bulk_blue
03BE   0008           01703         return
                      01704         
03BF                  01705 _pallet_cycle_not_pur
03BF   085F           01706         movf    ann_seq1, W
03C0   3A05           01707         xorlw   0x05
03C1   1D03           01708         btfss   STATUS, Z
03C2   2???           01709         goto    _pallet_cycle_not_org
03C3   3010           01710         movlw   0x10
03C4   00DB           01711         movwf   bulk_red
03C5   3004           01712         movlw   0x04
03C6   00DC           01713         movwf   bulk_green
03C7   01DD           01714         clrf    bulk_blue
03C8   0008           01715         return
                      01716 
03C9                  01717 _pallet_cycle_not_org
03C9   3010           01718         movlw   0x10
03CA   00DB           01719         movwf   bulk_red
03CB   3004           01720         movlw   0x04
03CC   00DC           01721         movwf   bulk_green
03CD   00DD           01722         movwf   bulk_blue
03CE   0008           01723         return
                      01724 
                      01725         
                      01726 ;################################################################################
                      01727 ; Based on ann_seq1 return RGB values for current step of rainbow seq
                      01728 ;################################################################################
03CF                  01729 _rainbow_cycle
                      01730         
03CF   3066           01731         movlw   0x66                            ; if greater than 4 rest to 0
03D0   025F           01732         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
03D1   1803           01733         btfsc   STATUS, C       
03D2   01DF           01734         clrf    ann_seq1
                      01735 
                      01736         ; full red green up
03D3   3011           01737         movlw   0x11                            ; if greater than 4 rest to 0
03D4   025F           01738         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
03D5   1803           01739         btfsc   STATUS, C       
03D6   2???           01740         goto    _rainbow_cycle0
                      01741 
03D7   30FF           01742         movlw   0xFF
03D8   00DB           01743         movwf   bulk_red
03D9   085F           01744         movf    ann_seq1, W
03DA   00DC           01745         movwf   bulk_green
03DB   01DD           01746         clrf    bulk_blue
03DC   0008           01747         return
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01748         
03DD                  01749 _rainbow_cycle0
                      01750         ; red down full green
03DD   3022           01751         movlw   0x22                            ; if greater than 4 rest to 0
03DE   025F           01752         subwf   ann_seq1, W                     ; f - W, C = 0 if W > F, C = 1 W <= F
03DF   1803           01753         btfsc   STATUS, C       
03E0   2???           01754         goto    _rainbow_cycle1
                      01755 
03E1   3011           01756         movlw   0x11
03E2   025F           01757         subwf   ann_seq1, W                     ; f - W, C = 0 if W > F, C = 1 W <= F
03E3   3C10           01758         sublw   0x10                            ; k - W, C = 0 if W > k, C = 1 if W <= k
03E4   00DB           01759         movwf   bulk_red
03E5   30FF           01760         movlw   0xff
03E6   00DC           01761         movwf   bulk_green
03E7   01DD           01762         clrf    bulk_blue
03E8   0008           01763         return
                      01764 
03E9                  01765 _rainbow_cycle1
                      01766         ; full green blue up
03E9   3033           01767         movlw   0x33                            ; if greater than 4 rest to 0
03EA   025F           01768         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
03EB   1803           01769         btfsc   STATUS, C       
03EC   2???           01770         goto    _rainbow_cycle2
                      01771 
03ED   01DB           01772         clrf    bulk_red
03EE   30FF           01773         movlw   0xFF
03EF   00DC           01774         movwf   bulk_green
03F0   3022           01775         movlw   0x22
03F1   025F           01776         subwf   ann_seq1, W                     ; f - W, C = 0 if W > F, C = 1 W <= F
03F2   00DD           01777         movwf   bulk_blue
03F3   0008           01778         return
                      01779 
03F4                  01780 _rainbow_cycle2
                      01781         ; green down full blue
03F4   3044           01782         movlw   0x44                            ; if greater than 4 rest to 0
03F5   025F           01783         subwf   ann_seq1, W                     ; f - W, C = 0 if W > F, C = 1 W <= F
03F6   1803           01784         btfsc   STATUS, C       
03F7   2???           01785         goto    _rainbow_cycle3
                      01786 
03F8   01DB           01787         clrf    bulk_red
03F9   3033           01788         movlw   0x33
03FA   025F           01789         subwf   ann_seq1, W                     ; f - W, C = 0 if W > F, C = 1 W <= F
03FB   3C10           01790         sublw   0x10                            ; k - W, C = 0 if W > k, C = 1 if W <= k
03FC   00DC           01791         movwf   bulk_green
03FD   30FF           01792         movlw   0xff
03FE   00DD           01793         movwf   bulk_blue
03FF   0008           01794         return
                      01795 
0400                  01796 _rainbow_cycle3
                      01797         ; full blue red up
0400   3055           01798         movlw   0x55                            ; if greater than 4 rest to 0
0401   025F           01799         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
0402   1803           01800         btfsc   STATUS, C       
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0403   2???           01801         goto    _rainbow_cycle4
                      01802 
0404   3044           01803         movlw   0x44
0405   025F           01804         subwf   ann_seq1, W                     ; f - W, C = 0 if W > F, C = 1 W <= F
0406   00DB           01805         movwf   bulk_red
0407   01DC           01806         clrf    bulk_green
0408   30FF           01807         movlw   0xFF
0409   00DD           01808         movwf   bulk_blue
040A   0008           01809         return
                      01810 
040B                  01811 _rainbow_cycle4
                      01812         ; full red blue down
040B   3066           01813         movlw   0x66                            ; if greater than 4 rest to 0
040C   025F           01814         subwf   ann_seq1, W                     ; f - W, C = 0 if W > F, C = 1 W <= F
040D   1803           01815         btfsc   STATUS, C       
040E   0008           01816         return
                      01817 
040F   30FF           01818         movlw   0xFF
0410   00DB           01819         movwf   bulk_red
0411   01DC           01820         clrf    bulk_green
0412   3055           01821         movlw   0x55
0413   025F           01822         subwf   ann_seq1, W                     ; f - W, C = 0 if W > F, C = 1 W <= F
0414   3C10           01823         sublw   0x10                            ; k - W, C = 0 if W > k, C = 1 if W <= k
0415   00DD           01824         movwf   bulk_blue
0416   0008           01825         return  
                      01826         
                      01827 
                      01828 ;################################################################################
                      01829 ; cycle the LFSR (sudo random) generator 8 bits and return the new result in W
                      01830 ;################################################################################
0417                  01831 _CYCLE_LFSR
0417   3008           01832         movlw   0x08
0418   00E6           01833         movwf   LFSR_count
0419                  01834 cycle_lfsr_loop
                      01835         ; seed register with inial value
0419   1067           01836         bcf             temp, 0
041A   1862           01837         btfsc   LFSR_0, 0
041B   1467           01838         bsf             temp, 0
                      01839         ; test bit invert result if set
041C   1962           01840         btfsc   LFSR_0, 2
041D   09E7           01841         comf    temp, f
                      01842         ; test bit invert result if set
041E   1B62           01843         btfsc   LFSR_0, 6
041F   09E7           01844         comf    temp, f
                      01845         ; test bit invert result if set
0420   1BE2           01846         btfsc   LFSR_0, 7
0421   09E7           01847         comf    temp, f
                      01848         
                      01849         ; set carry bit
0422   1003           01850         bcf             STATUS, C
0423   1867           01851         btfsc   temp, 0
0424   1403           01852         bsf             STATUS, C
                      01853         
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01854         ; rotat the bits 
0425   0CE5           01855         rrf             LFSR_3, F
0426   0CE4           01856         rrf             LFSR_2, F
0427   0CE3           01857         rrf             LFSR_1, F
0428   0CE2           01858         rrf             LFSR_0, F
0429   0BE6           01859         decfsz  LFSR_count, F
042A   2???           01860         goto    cycle_lfsr_loop
042B   0862           01861         movf    LFSR_0, W
042C   0008           01862         return
                      01863 
                      01864 ;################################################################################
                      01865 ; compress clearing the RGB vars
                      01866 ;################################################################################
042D                  01867 _clear_RGB
042D   01DB           01868         clrf    bulk_red
042E   01DD           01869         clrf    bulk_blue
042F   01DC           01870         clrf    bulk_green
0430   0008           01871         return
                      01872         
                      01873 ;################################################################################
                      01874 ; Based on ann_seq3 sets one of the inner ring LEDs to stored RGB values
                      01875 ;################################################################################
0431                  01876 _rotate_set_inner_ring
                      01877         
0431   3003           01878         movlw   0x03                            ; if greater than 2 rest to 0
0432   0261           01879         subwf   ann_seq3, W                     ; C = 0 if W > F, C = 1 W <= F
0433   1803           01880         btfsc   STATUS, C       
0434   01E1           01881         clrf    ann_seq3
                      01882         
0435   0861           01883         movf    ann_seq3, W
0436   1D03           01884         btfss   STATUS, Z
0437   2???           01885         goto    _rotate_set_inner_ring1
0438   085B           01886         movf    bulk_red, W
0439   00B3           01887         movwf   led8r
043A   085C           01888         movf    bulk_green, W
043B   00B4           01889         movwf   led8g
043C   085D           01890         movf    bulk_blue, W
043D   00B5           01891         movwf   led8b
043E   0008           01892         return
                      01893         
043F                  01894 _rotate_set_inner_ring1 
043F   0861           01895         movf    ann_seq3, W
0440   3A01           01896         xorlw   0x01
0441   1D03           01897         btfss   STATUS, Z
0442   2???           01898         goto    _rotate_set_inner_ring2
0443   085B           01899         movf    bulk_red, W
0444   00B6           01900         movwf   led9r
0445   085C           01901         movf    bulk_green, W
0446   00B7           01902         movwf   led9g
0447   085D           01903         movf    bulk_blue, W
0448   00B8           01904         movwf   led9b
0449   0008           01905         return
                      01906         
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

044A                  01907 _rotate_set_inner_ring2
044A   085B           01908         movf    bulk_red, W
044B   00C2           01909         movwf   led15r
044C   085C           01910         movf    bulk_green, W
044D   00C3           01911         movwf   led15g
044E   085D           01912         movf    bulk_blue, W
044F   00C4           01913         movwf   led15b
0450   0008           01914         return
                      01915         
0451   0008           01916         return
                      01917 
                      01918 ;################################################################################
                      01919 ; Based on ann_seq3 sets one of the inner ring LEDs to stored RGB values
                      01920 ;################################################################################
0452                  01921 _rotate_set_inner_ring_ccw
                      01922         
0452   3003           01923         movlw   0x03                            ; if greater than 2 rest to 0
0453   0261           01924         subwf   ann_seq3, W                     ; C = 0 if W > F, C = 1 W <= F
0454   1803           01925         btfsc   STATUS, C       
0455   01E1           01926         clrf    ann_seq3
                      01927         
0456   0861           01928         movf    ann_seq3, W
0457   1D03           01929         btfss   STATUS, Z
0458   2???           01930         goto    _rotate_set_inner_ring_ccw1
0459   085B           01931         movf    bulk_red, W
045A   00C2           01932         movwf   led15r
045B   085C           01933         movf    bulk_green, W
045C   00C3           01934         movwf   led15g
045D   085D           01935         movf    bulk_blue, W
045E   00C4           01936         movwf   led15b
045F   0008           01937         return
                      01938         
0460                  01939 _rotate_set_inner_ring_ccw1     
0460   0861           01940         movf    ann_seq3, W
0461   3A01           01941         xorlw   0x01
0462   1D03           01942         btfss   STATUS, Z
0463   2???           01943         goto    _rotate_set_inner_ring_ccw2
0464   085B           01944         movf    bulk_red, W
0465   00B6           01945         movwf   led9r
0466   085C           01946         movf    bulk_green, W
0467   00B7           01947         movwf   led9g
0468   085D           01948         movf    bulk_blue, W
0469   00B8           01949         movwf   led9b
046A   0008           01950         return
                      01951         
046B                  01952 _rotate_set_inner_ring_ccw2
046B   085B           01953         movf    bulk_red, W
046C   00B3           01954         movwf   led8r
046D   085C           01955         movf    bulk_green, W
046E   00B4           01956         movwf   led8g
046F   085D           01957         movf    bulk_blue, W
0470   00B5           01958         movwf   led8b
0471   0008           01959         return
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01960         
0472   0008           01961         return
                      01962         
                      01963 ;################################################################################
                      01964 ; Based on ann_seq2 sets one of the outer ring LEDs to stored RGB values
                      01965 ;################################################################################
0473                  01966 _rotate_set_outer_ring  
                      01967         
0473   300C           01968         movlw   0x0C                            ; if greater than 12 rest to 0
0474   0260           01969         subwf   ann_seq2, W                     ; C = 0 if W > F, C = 1 W <= F
0475   1803           01970         btfsc   STATUS, C       
0476   01E0           01971         clrf    ann_seq2
                      01972         
0477   0860           01973         movf    ann_seq2, W
0478   1D03           01974         btfss   STATUS, Z
0479   2???           01975         goto    _rotate_set_outer_ring1
047A   085B           01976         movf    bulk_red, W
047B   00A1           01977         movwf   led1r
047C   085C           01978         movf    bulk_green, W
047D   00A2           01979         movwf   led1g
047E   085D           01980         movf    bulk_blue, W
047F   00A3           01981         movwf   led1b
0480   0008           01982         return
                      01983         
0481                  01984 _rotate_set_outer_ring1 
0481   0860           01985         movf    ann_seq2, W
0482   3A01           01986         xorlw   0x01
0483   1D03           01987         btfss   STATUS, Z
0484   2???           01988         goto    _rotate_set_outer_ring2
0485   085B           01989         movf    bulk_red, W
0486   00A4           01990         movwf   led2r
0487   085C           01991         movf    bulk_green, W
0488   00A5           01992         movwf   led2g
0489   085D           01993         movf    bulk_blue, W
048A   00A6           01994         movwf   led2b
048B   0008           01995         return
                      01996         
048C                  01997 _rotate_set_outer_ring2
048C   0860           01998         movf    ann_seq2, W
048D   3A02           01999         xorlw   0x02
048E   1D03           02000         btfss   STATUS, Z
048F   2???           02001         goto    _rotate_set_outer_ring3
0490   085B           02002         movf    bulk_red, W
0491   00A7           02003         movwf   led3r
0492   085C           02004         movf    bulk_green, W
0493   00A8           02005         movwf   led3g
0494   085D           02006         movf    bulk_blue, W
0495   00A9           02007         movwf   led3b
0496   0008           02008         return
                      02009 
0497                  02010 _rotate_set_outer_ring3
0497   0860           02011         movf    ann_seq2, W
0498   3A03           02012         xorlw   0x03
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0499   1D03           02013         btfss   STATUS, Z
049A   2???           02014         goto    _rotate_set_outer_ring4
049B   085B           02015         movf    bulk_red, W
049C   00AA           02016         movwf   led4r
049D   085C           02017         movf    bulk_green, W
049E   00AB           02018         movwf   led4g
049F   085D           02019         movf    bulk_blue, W
04A0   00AC           02020         movwf   led4b
04A1   0008           02021         return
                      02022 
04A2                  02023 _rotate_set_outer_ring4
04A2   0860           02024         movf    ann_seq2, W
04A3   3A04           02025         xorlw   0x04
04A4   1D03           02026         btfss   STATUS, Z
04A5   2???           02027         goto    _rotate_set_outer_ring5
04A6   085B           02028         movf    bulk_red, W
04A7   00AD           02029         movwf   led5r
04A8   085C           02030         movf    bulk_green, W
04A9   00AE           02031         movwf   led5g
04AA   085D           02032         movf    bulk_blue, W
04AB   00AF           02033         movwf   led5b
04AC   0008           02034         return
                      02035 
04AD                  02036 _rotate_set_outer_ring5
04AD   0860           02037         movf    ann_seq2, W
04AE   3A05           02038         xorlw   0x05
04AF   1D03           02039         btfss   STATUS, Z
04B0   2???           02040         goto    _rotate_set_outer_ring6
04B1   085B           02041         movf    bulk_red, W
04B2   00B9           02042         movwf   led10r
04B3   085C           02043         movf    bulk_green, W
04B4   00BA           02044         movwf   led10g
04B5   085D           02045         movf    bulk_blue, W
04B6   00BB           02046         movwf   led10b
04B7   0008           02047         return
                      02048 
04B8                  02049 _rotate_set_outer_ring6
04B8   0860           02050         movf    ann_seq2, W
04B9   3A06           02051         xorlw   0x06
04BA   1D03           02052         btfss   STATUS, Z
04BB   2???           02053         goto    _rotate_set_outer_ring7
04BC   085B           02054         movf    bulk_red, W
04BD   00CB           02055         movwf   led18r
04BE   085C           02056         movf    bulk_green, W
04BF   00CC           02057         movwf   led18g
04C0   085D           02058         movf    bulk_blue, W
04C1   00CD           02059         movwf   led18b
04C2   0008           02060         return
                      02061 
04C3                  02062 _rotate_set_outer_ring7
04C3   0860           02063         movf    ann_seq2, W
04C4   3A07           02064         xorlw   0x07
04C5   1D03           02065         btfss   STATUS, Z
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04C6   2???           02066         goto    _rotate_set_outer_ring8
04C7   085B           02067         movf    bulk_red, W
04C8   00C8           02068         movwf   led17r
04C9   085C           02069         movf    bulk_green, W
04CA   00C9           02070         movwf   led17g
04CB   085D           02071         movf    bulk_blue, W
04CC   00CA           02072         movwf   led17b
04CD   0008           02073         return
                      02074 
04CE                  02075 _rotate_set_outer_ring8
04CE   0860           02076         movf    ann_seq2, W
04CF   3A08           02077         xorlw   0x08
04D0   1D03           02078         btfss   STATUS, Z
04D1   2???           02079         goto    _rotate_set_outer_ring9
04D2   085B           02080         movf    bulk_red, W
04D3   00C5           02081         movwf   led16r
04D4   085C           02082         movf    bulk_green, W
04D5   00C6           02083         movwf   led16g
04D6   085D           02084         movf    bulk_blue, W
04D7   00C7           02085         movwf   led16b
04D8   0008           02086         return
                      02087 
04D9                  02088 _rotate_set_outer_ring9
04D9   0860           02089         movf    ann_seq2, W
04DA   3A09           02090         xorlw   0x09
04DB   1D03           02091         btfss   STATUS, Z
04DC   2???           02092         goto    _rotate_set_outer_ring10
04DD   085B           02093         movf    bulk_red, W
04DE   00BF           02094         movwf   led14r
04DF   085C           02095         movf    bulk_green, W
04E0   00C0           02096         movwf   led14g
04E1   085D           02097         movf    bulk_blue, W
04E2   00C1           02098         movwf   led14b
04E3   0008           02099         return
                      02100         
04E4                  02101 _rotate_set_outer_ring10        
04E4   0860           02102         movf    ann_seq2, W
04E5   3A0A           02103         xorlw   0x0a
04E6   1D03           02104         btfss   STATUS, Z
04E7   2???           02105         goto    _rotate_set_outer_ring11
04E8   085B           02106         movf    bulk_red, W
04E9   00BC           02107         movwf   led13r
04EA   085C           02108         movf    bulk_green, W
04EB   00BD           02109         movwf   led13g
04EC   085D           02110         movf    bulk_blue, W
04ED   00BE           02111         movwf   led13b
04EE   0008           02112         return
                      02113 
04EF                  02114 _rotate_set_outer_ring11
04EF   085B           02115         movf    bulk_red, W
04F0   00B0           02116         movwf   led7r
04F1   085C           02117         movf    bulk_green, W
04F2   00B1           02118         movwf   led7g
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04F3   085D           02119         movf    bulk_blue, W
04F4   00B2           02120         movwf   led7b
04F5   0008           02121         return
                      02122         
04F6   0008           02123         return
                      02124         
                      02125 ;################################################################################
                      02126 ; Based on ann_seq1 return RGB values for 5 of 6 inf stone colors
                      02127 ;################################################################################
04F7                  02128 _inf5_cycle
                      02129         
04F7   3005           02130         movlw   0x05                            ; if greater than 4 rest to 0
04F8   025F           02131         subwf   ann_seq1, W                     ; C = 0 if W > F, C = 1 W <= F
04F9   1803           02132         btfsc   STATUS, C       
04FA   01DF           02133         clrf    ann_seq1
                      02134         
04FB   085F           02135         movf    ann_seq1, W
04FC   1D03           02136         btfss   STATUS, Z
04FD   2???           02137         goto    _inf5_cycle_not_red
04FE   30FF           02138         movlw   0xFF
04FF   00DB           02139         movwf   bulk_red
0500   01DC           02140         clrf    bulk_green
0501   01DD           02141         clrf    bulk_blue
0502   0008           02142         return
                      02143         
0503                  02144 _inf5_cycle_not_red     
0503   085F           02145         movf    ann_seq1, W
0504   3A01           02146         xorlw   0x01
0505   1D03           02147         btfss   STATUS, Z
0506   2???           02148         goto    _inf5_cycle_not_org
0507   30FF           02149         movlw   0xFF
0508   00DB           02150         movwf   bulk_red
0509   3004           02151         movlw   0x04
050A   00DC           02152         movwf   bulk_green
050B   01DD           02153         clrf    bulk_blue
050C   0008           02154         return
                      02155 
050D                  02156 _inf5_cycle_not_org
050D   085F           02157         movf    ann_seq1, W
050E   3A02           02158         xorlw   0x02
050F   1D03           02159         btfss   STATUS, Z
0510   2???           02160         goto    _inf5_cycle_not_blu
0511   01DB           02161         clrf    bulk_red
0512   01DC           02162         clrf    bulk_green
0513   30FF           02163         movlw   0xFF
0514   00DD           02164         movwf   bulk_blue
0515   0008           02165         return
                      02166 
0516                  02167 _inf5_cycle_not_blu
0516   085F           02168         movf    ann_seq1, W
0517   3A03           02169         xorlw   0x03
0518   1D03           02170         btfss   STATUS, Z
0519   2???           02171         goto    _inf5_cycle_not_pur
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

051A   30FF           02172         movlw   0xFF
051B   00DB           02173         movwf   bulk_red
051C   01DC           02174         clrf    bulk_green
051D   00DD           02175         movwf   bulk_blue
051E   0008           02176         return
                      02177         
051F                  02178 _inf5_cycle_not_pur
051F   01DB           02179         clrf    bulk_red
0520   30FF           02180         movlw   0xFF
0521   00DC           02181         movwf   bulk_green
0522   01DD           02182         clrf    bulk_blue
0523   0008           02183         return
                      02184         
                      02185 ;################################################################################
                      02186 ; Turn off all LEDs
                      02187 ;################################################################################
0524                  02188 _clear_all
0524   0187           02189         clrf    FSR1H                           ; set up indirect register to start of led bank
0525   3021           02190         movlw   led1r                           ; start of LED regs
0526   0086           02191         movwf   FSR1L
0527                  02192 _clear_all_loop
0527   3000           02193         movlw   0x00
                      02194         ; if doing single LED updates the last led (blue 18) will not get updated with current logic (st
                            ops one short) Updating tripplets avoids this issue. 
0528   001E           02195         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
0529   001E           02196         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
052A   001E           02197         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
052B   304D           02198         movlw   led18b                          ; address of last LED reg
052C   0206           02199         subwf   FSR1L, W                        ; C = 0 if W > F, C = 1 W <= F
052D   1C03           02200         btfss   STATUS, C       
052E   2???           02201         goto    _clear_all_loop
                      02202         
052F   0008           02203         return
                      02204         
                      02205 ;################################################################################
                      02206 ; set all leds based on bulk_red, bulk_green, bulk_blue
                      02207 ;################################################################################
0530                  02208 _set_all
0530   0187           02209         clrf    FSR1H                           ; set up indirect register to start of led bank
0531   3021           02210         movlw   led1r                           ; start of LED regs
0532   0086           02211         movwf   FSR1L
0533                  02212 _set_all_loop
0533   085B           02213         movf    bulk_red, W
0534   001E           02214         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
0535   085C           02215         movf    bulk_green, W
0536   001E           02216         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
0537   085D           02217         movf    bulk_blue, W
0538   001E           02218         movwi   FSR1++                          ; special command on new pics. Moves W to the INDFx regi
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ster then post incremetns the FSRx register by 1. Saves a instruction in this useage. 
0539   304D           02219         movlw   led18b                          ; address of last LED reg
053A   0206           02220         subwf   FSR1L, W                        ; C = 0 if W > F, C = 1 W <= F
053B   1C03           02221         btfss   STATUS, C       
053C   2???           02222         goto    _set_all_loop
                      02223         
053D   0008           02224         return
                      02225                 
                      02226 ;################################################################################
                      02227 ; this function sets up timer 0 which is used as a animation step delay
                      02228 ; it is non blocking so the micro can set in a fast idle loop looking for mode button presses during del
                            ays
                      02229 ; under current configuration you can have delays from 0.017s to ~4.2s in 256 steps (0.017s per step) 
                      02230 ;################################################################################
053E                  02231 _delay
053E   00F0           02232         movwf   gtemp                           ; save the W reg off for later use
                      02233         
                      02234         ;------------------
053F   300E           02235         movlw   d'14'
0540   0088           02236         movwf   BSR             
                      02237         ;------------------
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0541   128C           02238         bcf             PIR0, 5                         ; clear timer 0 flag
                      02239         
                      02240         ;------------------
0542   300B           02241         movlw   d'11'
0543   0088           02242         movwf   BSR             
                      02243         ;------------------     
0544   0970           02244         comf    gtemp,W                         ; invert then load delay value to timer (timer counts up
                             so a smaller number is a longer delay) 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0545   009D           02245         movwf   TMR0H
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0546   019C           02246         clrf    TMR0L                           ; preset the timer value for half sec delay (I hope)
0547   3091           02247         movlw   0x91                    
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0548   009F           02248         movwf   T0CON1                          ; LFINTOSC (31kHz) clock input, no sync, 1:2 prescale
0549   3090           02249         movlw   0x90                            
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
054A   009E           02250         movwf   T0CON0                          ; timer on, 16 bit, no postscale        
                      02251                 
                      02252         ;------------------
054B   0188           02253         clrf    BSR             
                      02254         ;------------------
                      02255         
054C   0008           02256         return
                      02257         
                      02258 
                      02259 ;################################################################################
                      02260 ; this function contains the special unlock sequence to start a flash write or clear. 
                      02261 ;################################################################################
054D                  02262 _unlock_flash
054D   138B           02263         bcf             INTCON, GIE                 ; disable ints (required as the next commands MUST b
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            e sequential
054E   3055           02264         movlw   0x55                            ; flash unlock key
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
054F   009F           02265         movwf   NVMCON2
0550   30AA           02266         movlw   0xAA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0551   009F           02267         movwf   NVMCON2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0552   149E           02268         bsf             NVMCON1, WR                     ; start the write or clear
0553   178B           02269         bsf             INTCON, GIE                 ; restart ints
0554   0008           02270         return  
                      02271         
                      02272         
                      02273 ; stuff in the  code description at the bottom of the code. 
0555   0050 0065 0074 02274         de      CODE_VER_STRING
       0065 0072 0020 
       0053 0068 0061 
       0062 0069 006E 
       006F 0020 0032 
       0030 004A 0075 
       006E 0032 0030 
       0031 0039 0020 
       0063 006F 0064 
       0065 0020 0066 
       006F 0072 0020 
       0054 0077 0069 
       006E 006B 006C 
       0065 0020 0054 
       0077 0069 006E 
       006B 0069 0065 
       0020 004
                      02275         
                      02276 ; </spaghetti> 
                      02277         ;### end of program ###
3FFC 37FC 3F9F 1FFF 3F02278         end     
       FF 
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACKTIM                            00000007
ADACT                             0000009F
ADACT0                            00000000
ADACT1                            00000001
ADACT2                            00000002
ADACT3                            00000003
ADACT4                            00000004
ADACTPPS                          00001EC3
ADACTPPS0                         00000000
ADACTPPS1                         00000001
ADACTPPS2                         00000002
ADACTPPS3                         00000003
ADACTPPS4                         00000004
ADACTPPS5                         00000005
ADCMD                             00000005
ADCON0                            0000009D
ADCON1                            0000009E
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADIE                              00000000
ADIF                              00000000
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADOEN                             00000002
ADON                              00000000
ADOR                              00000002
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESH0                           00000000
ADRESH1                           00000001
ADRESH2                           00000002
ADRESH3                           00000003
ADRESH4                           00000004
ADRESH5                           00000005
ADRESH6                           00000006
ADRESH7                           00000007
ADRESL                            0000009B
ADRESL0                           00000000
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

ADRESL1                           00000001
ADRESL2                           00000002
ADRESL3                           00000003
ADRESL4                           00000004
ADRESL5                           00000005
ADRESL6                           00000006
ADRESL7                           00000007
ADTIF                             00000001
AHEN                              00000001
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSA5                             00000005
ANSB4                             00000004
ANSB5                             00000005
ANSB6                             00000006
ANSB7                             00000007
ANSC0                             00000000
ANSC1                             00000001
ANSC2                             00000002
ANSC3                             00000003
ANSC4                             00000004
ANSC5                             00000005
ANSC6                             00000006
ANSC7                             00000007
ANSELA                            00001F38
ANSELB                            00001F43
ANSELC                            00001F4E
AS0E                              00000000
AS1E                              00000001
AS2E                              00000002
AS3E                              00000003
AS4E                              00000004
BAUD1CON                          0000011F
BAUD2CON                          00000A1F
BAUDCON                           0000011F
BAUDCON1                          0000011F
BAUDCON2                          00000A1F
BAUDCTL                           0000011F
BAUDCTL1                          0000011F
BAUDCTL2                          00000A1F
BCL1IE                            00000001
BCL1IF                            00000001
BF                                00000000
BOEN                              00000004
BORCON                            00000811
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR5                              00000005
BSR_SHAD                          00001FE6
C                                 00000000
C1EN                              00000007
C1HYS                             00000001
C1IE                              00000000
C1IF                              00000000
C1INTN                            00000000
C1INTP                            00000001
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OUT_CM1CON0                     00000006
C1OUT_CMOUT                       00000000
C1OUT_CMSTAT                      00000000
C1PCH0                            00000000
C1PCH1                            00000001
C1PCH2                            00000002
C1POL                             00000004
C1SYNC                            00000000
C2EN                              00000007
C2HYS                             00000001
C2IE                              00000001
C2IF                              00000001
C2INTN                            00000000
C2INTP                            00000001
C2NCH0                            00000000
C2NCH1                            00000001
C2NCH2                            00000002
C2OUT_CM2CON0                     00000006
C2OUT_CMOUT                       00000001
C2OUT_CMSTAT                      00000001
C2PCH0                            00000000
C2PCH1                            00000001
C2PCH2                            00000002
C2POL                             00000004
C2SYNC                            00000000
CCP1CAP                           0000030F
CCP1CON                           0000030E
CCP1CTS0                          00000000
CCP1CTS1                          00000001
CCP1CTS2                          00000002
CCP1EN                            00000007
CCP1FMT                           00000004
CCP1IE                            00000000
CCP1IF                            00000000
CCP1MD                            00000000
CCP1MODE0                         00000000
CCP1MODE1                         00000001
CCP1MODE2                         00000002
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

CCP1MODE3                         00000003
CCP1OUT                           00000005
CCP1PPS                           00001EA1
CCP1PPS0                          00000000
CCP1PPS1                          00000001
CCP1PPS2                          00000002
CCP1PPS3                          00000003
CCP1PPS4                          00000004
CCP1PPS5                          00000005
CCP2CAP                           00000313
CCP2CON                           00000312
CCP2CTS0                          00000000
CCP2CTS1                          00000001
CCP2CTS2                          00000002
CCP2EN                            00000007
CCP2FMT                           00000004
CCP2IE                            00000001
CCP2IF                            00000001
CCP2MD                            00000001
CCP2MODE0                         00000000
CCP2MODE1                         00000001
CCP2MODE2                         00000002
CCP2MODE3                         00000003
CCP2OUT                           00000005
CCP2PPS                           00001EA2
CCP2PPS0                          00000000
CCP2PPS1                          00000001
CCP2PPS2                          00000002
CCP2PPS3                          00000003
CCP2PPS4                          00000004
CCP2PPS5                          00000005
CCPR1                             0000030C
CCPR1H                            0000030D
CCPR1L                            0000030C
CCPR2                             00000310
CCPR2H                            00000311
CCPR2L                            00000310
CDAFVR0                           00000002
CDAFVR1                           00000003
CDIV0                             00000000
CDIV1                             00000001
CDIV2                             00000002
CDIV3                             00000003
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CHS5                              00000007
CKE                               00000006
CKP                               00000004
CKPOL                             00000006
CKPS0                             00000004
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

CKPS1                             00000005
CKPS2                             00000006
CKSYNC                            00000005
CLC1CON                           00001E10
CLC1GLS0                          00001E16
CLC1GLS1                          00001E17
CLC1GLS2                          00001E18
CLC1GLS3                          00001E19
CLC1IE                            00000004
CLC1IF                            00000004
CLC1MD                            00000001
CLC1POL                           00001E11
CLC1SEL0                          00001E12
CLC1SEL1                          00001E13
CLC1SEL2                          00001E14
CLC1SEL3                          00001E15
CLC2CON                           00001E1A
CLC2GLS0                          00001E20
CLC2GLS1                          00001E21
CLC2GLS2                          00001E22
CLC2GLS3                          00001E23
CLC2IE                            00000005
CLC2IF                            00000005
CLC2MD                            00000002
CLC2POL                           00001E1B
CLC2SEL0                          00001E1C
CLC2SEL1                          00001E1D
CLC2SEL2                          00001E1E
CLC2SEL3                          00001E1F
CLC3CON                           00001E24
CLC3GLS0                          00001E2A
CLC3GLS1                          00001E2B
CLC3GLS2                          00001E2C
CLC3GLS3                          00001E2D
CLC3IE                            00000006
CLC3IF                            00000006
CLC3MD                            00000003
CLC3POL                           00001E25
CLC3SEL0                          00001E26
CLC3SEL1                          00001E27
CLC3SEL2                          00001E28
CLC3SEL3                          00001E29
CLC4CON                           00001E2E
CLC4GLS0                          00001E34
CLC4GLS1                          00001E35
CLC4GLS2                          00001E36
CLC4GLS3                          00001E37
CLC4IE                            00000007
CLC4IF                            00000007
CLC4MD                            00000004
CLC4POL                           00001E2F
CLC4SEL0                          00001E30
CLC4SEL1                          00001E31
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

CLC4SEL2                          00001E32
CLC4SEL3                          00001E33
CLCDATA                           00001E0F
CLCIN0PPS                         00001EBB
CLCIN0PPS0                        00000000
CLCIN0PPS1                        00000001
CLCIN0PPS2                        00000002
CLCIN0PPS3                        00000003
CLCIN0PPS4                        00000004
CLCIN0PPS5                        00000005
CLCIN1PPS                         00001EBC
CLCIN1PPS0                        00000000
CLCIN1PPS1                        00000001
CLCIN1PPS2                        00000002
CLCIN1PPS3                        00000003
CLCIN1PPS4                        00000004
CLCIN1PPS5                        00000005
CLCIN2PPS                         00001EBD
CLCIN2PPS0                        00000000
CLCIN2PPS1                        00000001
CLCIN2PPS2                        00000002
CLCIN2PPS3                        00000003
CLCIN2PPS4                        00000004
CLCIN2PPS5                        00000005
CLCIN3PPS                         00001EBE
CLCIN3PPS0                        00000000
CLCIN3PPS1                        00000001
CLCIN3PPS2                        00000002
CLCIN3PPS3                        00000003
CLCIN3PPS4                        00000004
CLCIN3PPS5                        00000005
CLKRCLK                           00000896
CLKRCLK0                          00000000
CLKRCLK1                          00000001
CLKRCLK2                          00000002
CLKRCLK3                          00000003
CLKRCON                           00000895
CLKRDC0                           00000003
CLKRDC1                           00000004
CLKRDIV0                          00000000
CLKRDIV1                          00000001
CLKRDIV2                          00000002
CLKREN                            00000007
CLKRMD                            00000001
CM1CON0                           00000990
CM1CON1                           00000991
CM1NCH                            00000992
CM1PCH                            00000993
CM2CON0                           00000994
CM2CON1                           00000995
CM2NCH                            00000996
CM2PCH                            00000997
CMOUT                             0000098F
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

CMP1MD                            00000001
CMP2MD                            00000002
CMSTAT                            0000098F
CODE_VER_STRING                   "Peter Shabino 20Jun2019 code for Twinkle Twinkie Iron Badge V5 www.wire2wire.org!"
COSC0                             00000004
COSC1                             00000005
COSC2                             00000006
CPUDOZE                           0000088C
CREN                              00000004
CS                                00000000
CS0                               00000000
CS1                               00000001
CS2                               00000002
CS3                               00000003
CSRC                              00000007
CSWHOLD                           00000007
CSWIE                             00000006
CSWIF                             00000006
CTS0                              00000000
CTS1                              00000001
CTS2                              00000002
CWG1AS0                           00000612
CWG1AS1                           00000613
CWG1CLKCON                        0000060C
CWG1CON0                          00000610
CWG1CON1                          00000611
CWG1CS                            00000000
CWG1DAT                           0000060D
CWG1DAT0                          00000000
CWG1DAT1                          00000001
CWG1DAT2                          00000002
CWG1DAT3                          00000003
CWG1DBF                           0000060F
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           0000060E
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWG1EN                            00000007
CWG1IE                            00000000
CWG1IF                            00000000
CWG1IN                            00000005
CWG1INPPS0                        00000000
CWG1INPPS1                        00000001
CWG1INPPS2                        00000002
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

CWG1INPPS3                        00000003
CWG1INPPS4                        00000004
CWG1INPPS5                        00000005
CWG1LD                            00000006
CWG1LSAC0                         00000002
CWG1LSAC1                         00000003
CWG1LSBD0                         00000004
CWG1LSBD1                         00000005
CWG1MD                            00000000
CWG1MODE0                         00000000
CWG1MODE1                         00000001
CWG1MODE2                         00000002
CWG1OVRA                          00000004
CWG1OVRB                          00000005
CWG1OVRC                          00000006
CWG1OVRD                          00000007
CWG1POLA                          00000000
CWG1POLB                          00000001
CWG1POLC                          00000002
CWG1POLD                          00000003
CWG1PPS                           00001EB1
CWG1PPS0                          00000000
CWG1PPS1                          00000001
CWG1PPS2                          00000002
CWG1PPS3                          00000003
CWG1PPS4                          00000004
CWG1PPS5                          00000005
CWG1REN                           00000006
CWG1SHUTDOWN                      00000007
CWG1STR                           00000614
CWG1STRA                          00000000
CWG1STRB                          00000001
CWG1STRC                          00000002
CWG1STRD                          00000003
D1N                               00000000
D1S0                              00000000
D1S1                              00000001
D1S2                              00000002
D1S3                              00000003
D1S4                              00000004
D1S5                              00000005
D1T                               00000001
D2N                               00000002
D2S0                              00000000
D2S1                              00000001
D2S2                              00000002
D2S3                              00000003
D2S4                              00000004
D2S5                              00000005
D2T                               00000003
D3N                               00000004
D3S0                              00000000
D3S1                              00000001
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

D3S2                              00000002
D3S3                              00000003
D3S4                              00000004
D3S5                              00000005
D3T                               00000005
D4N                               00000006
D4S0                              00000000
D4S1                              00000001
D4S2                              00000002
D4S3                              00000003
D4S4                              00000004
D4S5                              00000005
D4T                               00000007
DAC1CON0                          0000090E
DAC1CON1                          0000090F
DAC1EN                            00000007
DAC1MD                            00000006
DAC1NSS                           00000000
DAC1OE1                           00000005
DAC1OE2                           00000004
DAC1PSS0                          00000002
DAC1PSS1                          00000003
DAC1R0                            00000000
DAC1R1                            00000001
DAC1R2                            00000002
DAC1R3                            00000003
DAC1R4                            00000004
DATA_ADDRESS                      00000005
DBF0                              00000000
DBF1                              00000001
DBF2                              00000002
DBF3                              00000003
DBF4                              00000004
DBF5                              00000005
DBR0                              00000000
DBR1                              00000001
DBR2                              00000002
DBR3                              00000003
DBR4                              00000004
DBR5                              00000005
DC                                00000001
DC0                               00000006
DC1                               00000007
DC2                               00000000
DC3                               00000001
DC4                               00000002
DC5                               00000003
DC6                               00000004
DC7                               00000005
DC8                               00000006
DC9                               00000007
DDS1MD                            00000007
DHEN                              00000000
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

DOE                               00000004
DOZE0                             00000000
DOZE1                             00000001
DOZE2                             00000002
DOZEN                             00000006
D_A                               00000005
D_NOT_A                           00000005
EN                                00000007
ENDLOOP                           0000038E
EXTOEN                            00000007
EXTOR                             00000007
F                                 00000001
FERR                              00000002
FMT                               00000004
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00001FE9
FSR0L                             00000004
FSR0L_SHAD                        00001FE8
FSR0_SHAD                         00001FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00001FEB
FSR1L                             00000006
FSR1L_SHAD                        00001FEA
FSR1_SHAD                         00001FEA
FVRCON                            0000090C
FVREN                             00000007
FVRMD                             00000006
FVRRDY                            00000006
G1EN                              00000007
G1POL                             00000000
G2POL                             00000001
G3POL                             00000002
G4D1N                             00000000
G4D1T                             00000001
G4D2N                             00000002
G4D2T                             00000003
G4D3N                             00000004
G4D3T                             00000005
G4D4N                             00000006
G4D4T                             00000007
G4POL                             00000003
GCEN                              00000007
GE                                00000007
GGO_NOT_DONE                      00000003
GIE                               00000007
GOnDONE                           00000001
GPOL                              00000006
GSPM                              00000004
GSS0                              00000000
GSS1                              00000001
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

GSS2                              00000002
GSS3                              00000003
GSS4                              00000004
GTM                               00000005
GVAL                              00000002
HFFRQ0                            00000000
HFFRQ1                            00000001
HFFRQ2                            00000002
HFOEN                             00000006
HFOR                              00000006
HFTUN0                            00000000
HFTUN1                            00000001
HFTUN2                            00000002
HFTUN3                            00000003
HFTUN4                            00000004
HFTUN5                            00000005
HYS                               00000001
I2C_DAT                           00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IDLEN                             00000007
IN                                00000005
INDF0                             00000000
INDF1                             00000001
INLVLA                            00001F3C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INLVLB                            00001F47
INLVLB4                           00000004
INLVLB5                           00000005
INLVLB6                           00000006
INLVLB7                           00000007
INLVLC                            00001F52
INLVLC0                           00000000
INLVLC1                           00000001
INLVLC2                           00000002
INLVLC3                           00000003
INLVLC4                           00000004
INLVLC5                           00000005
INLVLC6                           00000006
INLVLC7                           00000007
INTCON                            0000000B
INTE                              00000000
INTEDG                            00000000
INTF                              00000000
INTN_CLC1CON                      00000003
INTN_CLC2CON                      00000003
INTN_CLC3CON                      00000003
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

INTN_CLC4CON                      00000003
INTN_CM1CON1                      00000000
INTN_CM2CON1                      00000000
INTPPS                            00001E90
INTPPS0                           00000000
INTPPS1                           00000001
INTPPS2                           00000002
INTPPS3                           00000003
INTPPS4                           00000004
INTPPS5                           00000005
INTP_CLC1CON                      00000004
INTP_CLC2CON                      00000004
INTP_CLC3CON                      00000004
INTP_CLC4CON                      00000004
INTP_CM1CON1                      00000001
INTP_CM2CON1                      00000001
IOCAF                             00001F3F
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00001F3E
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00001F3D
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCBF                             00001F4A
IOCBF4                            00000004
IOCBF5                            00000005
IOCBF6                            00000006
IOCBF7                            00000007
IOCBN                             00001F49
IOCBN4                            00000004
IOCBN5                            00000005
IOCBN6                            00000006
IOCBN7                            00000007
IOCBP                             00001F48
IOCBP4                            00000004
IOCBP5                            00000005
IOCBP6                            00000006
IOCBP7                            00000007
IOCCF                             00001F55
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

IOCCF0                            00000000
IOCCF1                            00000001
IOCCF2                            00000002
IOCCF3                            00000003
IOCCF4                            00000004
IOCCF5                            00000005
IOCCF6                            00000006
IOCCF7                            00000007
IOCCN                             00001F54
IOCCN0                            00000000
IOCCN1                            00000001
IOCCN2                            00000002
IOCCN3                            00000003
IOCCN4                            00000004
IOCCN5                            00000005
IOCCN6                            00000006
IOCCN7                            00000007
IOCCP                             00001F53
IOCCP0                            00000000
IOCCP1                            00000001
IOCCP2                            00000002
IOCCP3                            00000003
IOCCP4                            00000004
IOCCP5                            00000005
IOCCP6                            00000006
IOCCP7                            00000007
IOCIE                             00000004
IOCIF                             00000004
IOCMD                             00000000
IRQ_bank0_green                   0000007D
IRQ_bank0_red                     00000076
IRQ_bank1_chk                     00000085
IRQ_bank1_green                   00000096
IRQ_bank1_red                     0000008F
IRQ_bank2_chk                     0000009E
IRQ_bank2_green                   000000AB
IRQ_bank2_red                     000000A4
IRQ_bank_scan                     00000022
IRQ_banks_done                    000000B2
IRQ_not_tmr1                      000000B3
IRQ_set_common_done               00000065
LATA                              00000018
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LATB                              00000019
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              0000001A
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LC1D1S0                           00000000
LC1D1S1                           00000001
LC1D1S2                           00000002
LC1D1S3                           00000003
LC1D1S4                           00000004
LC1D1S5                           00000005
LC1D2S0                           00000000
LC1D2S1                           00000001
LC1D2S2                           00000002
LC1D2S3                           00000003
LC1D2S4                           00000004
LC1D2S5                           00000005
LC1D3S0                           00000000
LC1D3S1                           00000001
LC1D3S2                           00000002
LC1D3S3                           00000003
LC1D3S4                           00000004
LC1D3S5                           00000005
LC1D4S0                           00000000
LC1D4S1                           00000001
LC1D4S2                           00000002
LC1D4S3                           00000003
LC1D4S4                           00000004
LC1D4S5                           00000005
LC1EN                             00000007
LC1G1D1N                          00000000
LC1G1D1T                          00000001
LC1G1D2N                          00000002
LC1G1D2T                          00000003
LC1G1D3N                          00000004
LC1G1D3T                          00000005
LC1G1D4N                          00000006
LC1G1D4T                          00000007
LC1G1POL                          00000000
LC1G2D1N                          00000000
LC1G2D1T                          00000001
LC1G2D2N                          00000002
LC1G2D2T                          00000003
LC1G2D3N                          00000004
LC1G2D3T                          00000005
LC1G2D4N                          00000006
LC1G2D4T                          00000007
LC1G2POL                          00000001
LC1G3D1N                          00000000
LC1G3D1T                          00000001
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

LC1G3D2N                          00000002
LC1G3D2T                          00000003
LC1G3D3N                          00000004
LC1G3D3T                          00000005
LC1G3D4N                          00000006
LC1G3D4T                          00000007
LC1G3POL                          00000002
LC1G4D1N                          00000000
LC1G4D1T                          00000001
LC1G4D2N                          00000002
LC1G4D2T                          00000003
LC1G4D3N                          00000004
LC1G4D3T                          00000005
LC1G4D4N                          00000006
LC1G4D4T                          00000007
LC1G4POL                          00000003
LC1INTN                           00000003
LC1INTP                           00000004
LC1MODE0                          00000000
LC1MODE1                          00000001
LC1MODE2                          00000002
LC1OUT                            00000005
LC1POL                            00000007
LC2D1S0                           00000000
LC2D1S1                           00000001
LC2D1S2                           00000002
LC2D1S3                           00000003
LC2D1S4                           00000004
LC2D1S5                           00000005
LC2D2S0                           00000000
LC2D2S1                           00000001
LC2D2S2                           00000002
LC2D2S3                           00000003
LC2D2S4                           00000004
LC2D2S5                           00000005
LC2D3S0                           00000000
LC2D3S1                           00000001
LC2D3S2                           00000002
LC2D3S3                           00000003
LC2D3S4                           00000004
LC2D3S5                           00000005
LC2D4S0                           00000000
LC2D4S1                           00000001
LC2D4S2                           00000002
LC2D4S3                           00000003
LC2D4S4                           00000004
LC2D4S5                           00000005
LC2EN                             00000007
LC2G1D1N                          00000000
LC2G1D1T                          00000001
LC2G1D2N                          00000002
LC2G1D2T                          00000003
LC2G1D3N                          00000004
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

LC2G1D3T                          00000005
LC2G1D4N                          00000006
LC2G1D4T                          00000007
LC2G1POL                          00000000
LC2G2D1N                          00000000
LC2G2D1T                          00000001
LC2G2D2N                          00000002
LC2G2D2T                          00000003
LC2G2D3N                          00000004
LC2G2D3T                          00000005
LC2G2D4N                          00000006
LC2G2D4T                          00000007
LC2G2POL                          00000001
LC2G3D1N                          00000000
LC2G3D1T                          00000001
LC2G3D2N                          00000002
LC2G3D2T                          00000003
LC2G3D3N                          00000004
LC2G3D3T                          00000005
LC2G3D4N                          00000006
LC2G3D4T                          00000007
LC2G3POL                          00000002
LC2G4D1N                          00000000
LC2G4D1T                          00000001
LC2G4D2N                          00000002
LC2G4D2T                          00000003
LC2G4D3N                          00000004
LC2G4D3T                          00000005
LC2G4D4N                          00000006
LC2G4D4T                          00000007
LC2G4POL                          00000003
LC2INTN                           00000003
LC2INTP                           00000004
LC2MODE0                          00000000
LC2MODE1                          00000001
LC2MODE2                          00000002
LC2OUT                            00000005
LC2POL                            00000007
LC3D1S0                           00000000
LC3D1S1                           00000001
LC3D1S2                           00000002
LC3D1S3                           00000003
LC3D1S4                           00000004
LC3D1S5                           00000005
LC3D2S0                           00000000
LC3D2S1                           00000001
LC3D2S2                           00000002
LC3D2S3                           00000003
LC3D2S4                           00000004
LC3D2S5                           00000005
LC3D3S0                           00000000
LC3D3S1                           00000001
LC3D3S2                           00000002
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

LC3D3S3                           00000003
LC3D3S4                           00000004
LC3D3S5                           00000005
LC3D4S0                           00000000
LC3D4S1                           00000001
LC3D4S2                           00000002
LC3D4S3                           00000003
LC3D4S4                           00000004
LC3D4S5                           00000005
LC3EN                             00000007
LC3G1D1N                          00000000
LC3G1D1T                          00000001
LC3G1D2N                          00000002
LC3G1D2T                          00000003
LC3G1D3N                          00000004
LC3G1D3T                          00000005
LC3G1D4N                          00000006
LC3G1D4T                          00000007
LC3G1POL                          00000000
LC3G2D1N                          00000000
LC3G2D1T                          00000001
LC3G2D2N                          00000002
LC3G2D2T                          00000003
LC3G2D3N                          00000004
LC3G2D3T                          00000005
LC3G2D4N                          00000006
LC3G2D4T                          00000007
LC3G2POL                          00000001
LC3G3D1N                          00000000
LC3G3D1T                          00000001
LC3G3D2N                          00000002
LC3G3D2T                          00000003
LC3G3D3N                          00000004
LC3G3D3T                          00000005
LC3G3D4N                          00000006
LC3G3D4T                          00000007
LC3G3POL                          00000002
LC3G4D1N                          00000000
LC3G4D1T                          00000001
LC3G4D2N                          00000002
LC3G4D2T                          00000003
LC3G4D3N                          00000004
LC3G4D3T                          00000005
LC3G4D4N                          00000006
LC3G4D4T                          00000007
LC3G4POL                          00000003
LC3INTN                           00000003
LC3INTP                           00000004
LC3MODE0                          00000000
LC3MODE1                          00000001
LC3MODE2                          00000002
LC3OUT                            00000005
LC3POL                            00000007
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

LC4D1S0                           00000000
LC4D1S1                           00000001
LC4D1S2                           00000002
LC4D1S3                           00000003
LC4D1S4                           00000004
LC4D1S5                           00000005
LC4D2S0                           00000000
LC4D2S1                           00000001
LC4D2S2                           00000002
LC4D2S3                           00000003
LC4D2S4                           00000004
LC4D2S5                           00000005
LC4D3S0                           00000000
LC4D3S1                           00000001
LC4D3S2                           00000002
LC4D3S3                           00000003
LC4D3S4                           00000004
LC4D3S5                           00000005
LC4D4S0                           00000000
LC4D4S1                           00000001
LC4D4S2                           00000002
LC4D4S3                           00000003
LC4D4S4                           00000004
LC4D4S5                           00000005
LC4EN                             00000007
LC4G1D1N                          00000000
LC4G1D1T                          00000001
LC4G1D2N                          00000002
LC4G1D2T                          00000003
LC4G1D3N                          00000004
LC4G1D3T                          00000005
LC4G1D4N                          00000006
LC4G1D4T                          00000007
LC4G1POL                          00000000
LC4G2D1N                          00000000
LC4G2D1T                          00000001
LC4G2D2N                          00000002
LC4G2D2T                          00000003
LC4G2D3N                          00000004
LC4G2D3T                          00000005
LC4G2D4N                          00000006
LC4G2D4T                          00000007
LC4G2POL                          00000001
LC4G3D1N                          00000000
LC4G3D1T                          00000001
LC4G3D2N                          00000002
LC4G3D2T                          00000003
LC4G3D3N                          00000004
LC4G3D3T                          00000005
LC4G3D4N                          00000006
LC4G3D4T                          00000007
LC4G3POL                          00000002
LC4G4D1N                          00000000
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

LC4G4D1T                          00000001
LC4G4D2N                          00000002
LC4G4D2T                          00000003
LC4G4D3N                          00000004
LC4G4D3T                          00000005
LC4G4D4N                          00000006
LC4G4D4T                          00000007
LC4G4POL                          00000003
LC4INTN                           00000003
LC4INTP                           00000004
LC4MODE0                          00000000
LC4MODE1                          00000001
LC4MODE2                          00000002
LC4OUT                            00000005
LC4POL                            00000007
LD                                00000006
LFOEN                             00000004
LFOR                              00000004
LFSR_0                            00000062
LFSR_1                            00000063
LFSR_2                            00000064
LFSR_3                            00000065
LFSR_count                        00000066
LSAC0                             00000002
LSAC1                             00000003
LSBD0                             00000004
LSBD1                             00000005
LWLO                              00000005
MAINLOOP                          000000F7
MC1OUT                            00000000
MC2OUT                            00000001
MFOEN                             00000005
MFOR                              00000005
MLC1OUT                           00000000
MLC2OUT                           00000001
MLC3OUT                           00000002
MLC4OUT                           00000003
MODE0                             00000000
MODE1                             00000001
MODE2                             00000002
MODE3                             00000003
MODE4                             00000004
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
MSSP1MD                           00000004
N1CKS0                            00000000
N1CKS1                            00000001
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

N1CKS2                            00000002
N1CKS3                            00000003
N1EN                              00000007
N1OUT                             00000005
N1PFM                             00000000
N1POL                             00000004
N1PWS0                            00000005
N1PWS1                            00000006
N1PWS2                            00000007
NCH0                              00000000
NCH1                              00000001
NCH2                              00000002
NCO1ACC                           0000058C
NCO1ACC0                          00000000
NCO1ACC1                          00000001
NCO1ACC10                         00000002
NCO1ACC11                         00000003
NCO1ACC12                         00000004
NCO1ACC13                         00000005
NCO1ACC14                         00000006
NCO1ACC15                         00000007
NCO1ACC16                         00000000
NCO1ACC17                         00000001
NCO1ACC18                         00000002
NCO1ACC19                         00000003
NCO1ACC2                          00000002
NCO1ACC3                          00000003
NCO1ACC4                          00000004
NCO1ACC5                          00000005
NCO1ACC6                          00000006
NCO1ACC7                          00000007
NCO1ACC8                          00000000
NCO1ACC9                          00000001
NCO1ACCH                          0000058D
NCO1ACCL                          0000058C
NCO1ACCU                          0000058E
NCO1CLK                           00000593
NCO1CON                           00000592
NCO1IE                            00000004
NCO1IF                            00000004
NCO1INC                           0000058F
NCO1INC0                          00000000
NCO1INC1                          00000001
NCO1INC10                         00000002
NCO1INC11                         00000003
NCO1INC12                         00000004
NCO1INC13                         00000005
NCO1INC14                         00000006
NCO1INC15                         00000007
NCO1INC16                         00000000
NCO1INC17                         00000001
NCO1INC18                         00000002
NCO1INC19                         00000003
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

NCO1INC2                          00000002
NCO1INC3                          00000003
NCO1INC4                          00000004
NCO1INC5                          00000005
NCO1INC6                          00000006
NCO1INC7                          00000007
NCO1INC8                          00000000
NCO1INC9                          00000001
NCO1INCH                          00000590
NCO1INCL                          0000058F
NCO1INCU                          00000591
NCOIE                             00000004
NCOIF                             00000004
NCOMD                             00000007
NDIV0                             00000000
NDIV1                             00000001
NDIV2                             00000002
NDIV3                             00000003
NOSC0                             00000004
NOSC1                             00000005
NOSC2                             00000006
NOSCR                             00000003
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_MEMV                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_SYNC                          00000002
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WDTWV                         00000005
NOT_WRITE                         00000002
NSS                               00000000
NVMADR                            0000081A
NVMADRH                           0000081B
NVMADRH0                          00000000
NVMADRH1                          00000001
NVMADRH2                          00000002
NVMADRH3                          00000003
NVMADRH4                          00000004
NVMADRH5                          00000005
NVMADRH6                          00000006
NVMADRL                           0000081A
NVMADRL0                          00000000
NVMADRL1                          00000001
NVMADRL2                          00000002
NVMADRL3                          00000003
NVMADRL4                          00000004
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

NVMADRL5                          00000005
NVMADRL6                          00000006
NVMADRL7                          00000007
NVMCON1                           0000081E
NVMCON2                           0000081F
NVMDAT                            0000081C
NVMDATH                           0000081D
NVMDATH0                          00000000
NVMDATH1                          00000001
NVMDATH2                          00000002
NVMDATH3                          00000003
NVMDATH4                          00000004
NVMDATH5                          00000005
NVMDATL                           0000081C
NVMDATL0                          00000000
NVMDATL1                          00000001
NVMDATL2                          00000002
NVMDATL3                          00000003
NVMDATL4                          00000004
NVMDATL5                          00000005
NVMDATL6                          00000006
NVMDATL7                          00000007
NVMIE                             00000005
NVMIF                             00000005
NVMMD                             00000002
NVMREGS                           00000006
ODCA0                             00000000
ODCA1                             00000001
ODCA2                             00000002
ODCA4                             00000004
ODCA5                             00000005
ODCB4                             00000004
ODCB5                             00000005
ODCB6                             00000006
ODCB7                             00000007
ODCC0                             00000000
ODCC1                             00000001
ODCC2                             00000002
ODCC3                             00000003
ODCC4                             00000004
ODCC5                             00000005
ODCC6                             00000006
ODCC7                             00000007
ODCONA                            00001F3A
ODCONB                            00001F45
ODCONC                            00001F50
OE1                               00000005
OE2                               00000004
OERR                              00000001
ON_T1CON                          00000000
ON_T2CON                          00000007
ORDY                              00000004
OSCCON1                           0000088D
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

OSCCON2                           0000088E
OSCCON3                           0000088F
OSCEN                             00000891
OSCFRQ                            00000893
OSCSTAT                           00000890
OSCTUNE                           00000892
OSFIE                             00000007
OSFIF                             00000007
OUTPS0                            00000000
OUTPS1                            00000001
OUTPS2                            00000002
OUTPS3                            00000003
OUT_CCP1CON                       00000005
OUT_CCP2CON                       00000005
OUT_CLC1CON                       00000005
OUT_CLC2CON                       00000005
OUT_CLC3CON                       00000005
OUT_CLC4CON                       00000005
OUT_CM1CON0                       00000006
OUT_CM2CON0                       00000006
OUT_PWM3CON                       00000005
OUT_PWM4CON                       00000005
OUT_PWM5CON                       00000005
OUT_PWM6CON                       00000005
OVRA                              00000004
OVRB                              00000005
OVRC                              00000006
OVRD                              00000007
P                                 00000004
PCH0                              00000000
PCH1                              00000001
PCH2                              00000002
PCIE                              00000006
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00001FE7
PCON0                             00000813
PCON1                             00000814
PEIE                              00000006
PEN                               00000002
PIE0                              00000716
PIE1                              00000717
PIE2                              00000718
PIE3                              00000719
PIE4                              0000071A
PIE5                              0000071B
PIE6                              0000071C
PIE7                              0000071D
PIR0                              0000070C
PIR1                              0000070D
PIR2                              0000070E
PIR3                              0000070F
PIR4                              00000710
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

PIR5                              00000711
PIR6                              00000712
PIR7                              00000713
PLLR                              00000000
PMD0                              00000796
PMD1                              00000797
PMD2                              00000798
PMD3                              00000799
PMD4                              0000079A
PMD5                              0000079B
POLA                              00000000
POLB                              00000001
POLC                              00000002
POLD                              00000003
POL_CLC1POL                       00000007
POL_CLC2POL                       00000007
POL_CLC3POL                       00000007
POL_CLC4POL                       00000007
POL_CM1CON0                       00000004
POL_CM2CON0                       00000004
POL_PWM3CON                       00000004
POL_PWM4CON                       00000004
POL_PWM5CON                       00000004
POL_PWM6CON                       00000004
PORTA                             0000000C
PORTB                             0000000D
PORTC                             0000000E
PPSLOCK                           00001E8F
PPSLOCKED                         00000000
PR0                               0000059D
PR1                               0000020F
PR2                               0000028D
PSCNT0                            00000000
PSCNT1                            00000001
PSCNT10                           00000002
PSCNT11                           00000003
PSCNT12                           00000004
PSCNT13                           00000005
PSCNT14                           00000006
PSCNT15                           00000007
PSCNT16                           00000000
PSCNT17                           00000001
PSCNT2                            00000002
PSCNT3                            00000003
PSCNT4                            00000004
PSCNT5                            00000005
PSCNT6                            00000006
PSCNT7                            00000007
PSCNT8                            00000000
PSCNT9                            00000001
PSS0                              00000002
PSS1                              00000003
PSYNC                             00000007
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

PWM3CON                           00000316
PWM3DC                            00000314
PWM3DC0                           00000006
PWM3DC1                           00000007
PWM3DC2                           00000000
PWM3DC3                           00000001
PWM3DC4                           00000002
PWM3DC5                           00000003
PWM3DC6                           00000004
PWM3DC7                           00000005
PWM3DC8                           00000006
PWM3DC9                           00000007
PWM3DCH                           00000315
PWM3DCL                           00000314
PWM3EN                            00000007
PWM3MD                            00000002
PWM3OUT                           00000005
PWM3POL                           00000004
PWM4CON                           0000031A
PWM4DC                            00000318
PWM4DC0                           00000006
PWM4DC1                           00000007
PWM4DC2                           00000000
PWM4DC3                           00000001
PWM4DC4                           00000002
PWM4DC5                           00000003
PWM4DC6                           00000004
PWM4DC7                           00000005
PWM4DC8                           00000006
PWM4DC9                           00000007
PWM4DCH                           00000319
PWM4DCL                           00000318
PWM4EN                            00000007
PWM4MD                            00000003
PWM4OUT                           00000005
PWM4POL                           00000004
PWM5CON                           0000031E
PWM5DC                            0000031C
PWM5DC0                           00000006
PWM5DC1                           00000007
PWM5DC2                           00000000
PWM5DC3                           00000001
PWM5DC4                           00000002
PWM5DC5                           00000003
PWM5DC6                           00000004
PWM5DC7                           00000005
PWM5DC8                           00000006
PWM5DC9                           00000007
PWM5DCH                           0000031D
PWM5DCL                           0000031C
PWM5EN                            00000007
PWM5MD                            00000004
PWM5OUT                           00000005
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

PWM5POL                           00000004
PWM6CON                           0000038E
PWM6DC                            0000038C
PWM6DC0                           00000006
PWM6DC1                           00000007
PWM6DC2                           00000000
PWM6DC3                           00000001
PWM6DC4                           00000002
PWM6DC5                           00000003
PWM6DC6                           00000004
PWM6DC7                           00000005
PWM6DC8                           00000006
PWM6DC9                           00000007
PWM6DCH                           0000038D
PWM6DCL                           0000038C
PWM6EN                            00000007
PWM6MD                            00000005
PWM6OUT                           00000005
PWM6POL                           00000004
PWMPW0                            00000006
PWMPW1                            00000007
PWMPW2                            00000000
PWMPW3                            00000001
PWMPW4                            00000002
PWMPW5                            00000003
PWMPW6                            00000004
PWMPW7                            00000005
PWMPW8                            00000006
PWMPW9                            00000007
RA0                               00000000
RA0PPS                            00001F10
RA0PPS0                           00000000
RA0PPS1                           00000001
RA0PPS2                           00000002
RA0PPS3                           00000003
RA0PPS4                           00000004
RA1                               00000001
RA1PPS                            00001F11
RA1PPS0                           00000000
RA1PPS1                           00000001
RA1PPS2                           00000002
RA1PPS3                           00000003
RA1PPS4                           00000004
RA2                               00000002
RA2PPS                            00001F12
RA2PPS0                           00000000
RA2PPS1                           00000001
RA2PPS2                           00000002
RA2PPS3                           00000003
RA2PPS4                           00000004
RA3                               00000003
RA3PPS                            00001F13
RA3PPS0                           00000000
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

RA3PPS1                           00000001
RA3PPS2                           00000002
RA3PPS3                           00000003
RA3PPS4                           00000004
RA4                               00000004
RA4PPS                            00001F14
RA4PPS0                           00000000
RA4PPS1                           00000001
RA4PPS2                           00000002
RA4PPS3                           00000003
RA4PPS4                           00000004
RA5                               00000005
RA5PPS                            00001F15
RA5PPS0                           00000000
RA5PPS1                           00000001
RA5PPS2                           00000002
RA5PPS3                           00000003
RA5PPS4                           00000004
RB4                               00000004
RB4PPS                            00001F1C
RB4PPS0                           00000000
RB4PPS1                           00000001
RB4PPS2                           00000002
RB4PPS3                           00000003
RB4PPS4                           00000004
RB5                               00000005
RB5PPS                            00001F1D
RB5PPS0                           00000000
RB5PPS1                           00000001
RB5PPS2                           00000002
RB5PPS3                           00000003
RB5PPS4                           00000004
RB6                               00000006
RB6PPS                            00001F1E
RB6PPS0                           00000000
RB6PPS1                           00000001
RB6PPS2                           00000002
RB6PPS3                           00000003
RB6PPS4                           00000004
RB7                               00000007
RB7PPS                            00001F1F
RB7PPS0                           00000000
RB7PPS1                           00000001
RB7PPS2                           00000002
RB7PPS3                           00000003
RB7PPS4                           00000004
RC0                               00000000
RC0PPS                            00001F20
RC0PPS0                           00000000
RC0PPS1                           00000001
RC0PPS2                           00000002
RC0PPS3                           00000003
RC0PPS4                           00000004
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

RC1                               00000001
RC1IE                             00000005
RC1IF                             00000005
RC1PPS                            00001F21
RC1PPS0                           00000000
RC1PPS1                           00000001
RC1PPS2                           00000002
RC1PPS3                           00000003
RC1PPS4                           00000004
RC1REG                            00000119
RC1STA                            0000011D
RC2                               00000002
RC2IE                             00000007
RC2IF                             00000007
RC2PPS                            00001F22
RC2PPS0                           00000000
RC2PPS1                           00000001
RC2PPS2                           00000002
RC2PPS3                           00000003
RC2PPS4                           00000004
RC2REG                            00000A19
RC2STA                            00000A1D
RC3                               00000003
RC3PPS                            00001F23
RC3PPS0                           00000000
RC3PPS1                           00000001
RC3PPS2                           00000002
RC3PPS3                           00000003
RC3PPS4                           00000004
RC4                               00000004
RC4PPS                            00001F24
RC4PPS0                           00000000
RC4PPS1                           00000001
RC4PPS2                           00000002
RC4PPS3                           00000003
RC4PPS4                           00000004
RC5                               00000005
RC5PPS                            00001F25
RC5PPS0                           00000000
RC5PPS1                           00000001
RC5PPS2                           00000002
RC5PPS3                           00000003
RC5PPS4                           00000004
RC6                               00000006
RC6PPS                            00001F26
RC6PPS0                           00000000
RC6PPS1                           00000001
RC6PPS2                           00000002
RC6PPS3                           00000003
RC6PPS4                           00000004
RC7                               00000007
RC7PPS                            00001F27
RC7PPS0                           00000000
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

RC7PPS1                           00000001
RC7PPS2                           00000002
RC7PPS3                           00000003
RC7PPS4                           00000004
RCEN                              00000003
RCIDL                             00000006
RCREG                             00000119
RCREG1                            00000119
RCREG2                            00000A19
RCSTA                             0000011D
RCSTA1                            0000011D
RCSTA2                            00000A1D
RD                                00000000
RD16                              00000001
READ_WRITE                        00000002
REN                               00000006
ROI                               00000005
RSEL0                             00000000
RSEL1                             00000001
RSEL2                             00000002
RSEL3                             00000003
RSEN                              00000001
RX1DTPPS                          00001ECB
RX1DTPPS0                         00000000
RX1DTPPS1                         00000001
RX1DTPPS2                         00000002
RX1DTPPS3                         00000003
RX1DTPPS4                         00000004
RX1DTPPS5                         00000005
RX2DTPPS                          00001ECD
RX2DTPPS0                         00000000
RX2DTPPS1                         00000001
RX2DTPPS2                         00000002
RX2DTPPS3                         00000003
RX2DTPPS4                         00000004
RX2DTPPS5                         00000005
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBCDE                             00000002
SBOREN                            00000007
SCIE                              00000005
SCKP                              00000004
SDAHT                             00000003
SEN                               00000000
SENDB                             00000003
SHUTDOWN                          00000007
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

SLRA5                             00000005
SLRB4                             00000004
SLRB5                             00000005
SLRB6                             00000006
SLRB7                             00000007
SLRC0                             00000000
SLRC1                             00000001
SLRC2                             00000002
SLRC3                             00000003
SLRC4                             00000004
SLRC5                             00000005
SLRC6                             00000006
SLRC7                             00000007
SLRCONA                           00001F3B
SLRCONB                           00001F46
SLRCONC                           00001F51
SMP                               00000007
SP1BRG                            0000011B
SP1BRGH                           0000011C
SP1BRGL                           0000011B
SP2BRG                            00000A1B
SP2BRGH                           00000A1C
SP2BRGL                           00000A1B
SPBRG                             0000011B
SPBRG1                            0000011B
SPBRG2                            00000A1B
SPBRGH                            0000011C
SPBRGH1                           0000011C
SPBRGH2                           00000A1C
SPBRGL                            0000011B
SPEN                              00000007
SREN                              00000005
SSP1ADD                           0000018D
SSP1BUF                           0000018C
SSP1CLKPPS                        00001EC5
SSP1CLKPPS0                       00000000
SSP1CLKPPS1                       00000001
SSP1CLKPPS2                       00000002
SSP1CLKPPS3                       00000003
SSP1CLKPPS4                       00000004
SSP1CLKPPS5                       00000005
SSP1CON1                          00000190
SSP1CON2                          00000191
SSP1CON3                          00000192
SSP1DATPPS                        00001EC6
SSP1DATPPS0                       00000000
SSP1DATPPS1                       00000001
SSP1DATPPS2                       00000002
SSP1DATPPS3                       00000003
SSP1DATPPS4                       00000004
SSP1DATPPS5                       00000005
SSP1IE                            00000000
SSP1IF                            00000000
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

SSP1MSK                           0000018E
SSP1SSPPS                         00001EC7
SSP1SSPPS0                        00000000
SSP1SSPPS1                        00000001
SSP1SSPPS2                        00000002
SSP1SSPPS3                        00000003
SSP1SSPPS4                        00000004
SSP1SSPPS5                        00000005
SSP1STAT                          0000018F
SSPEN                             00000005
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
START                             000000B4
STATE                             00000002
STATUS                            00000003
STATUS_SHAD                       00001FE4
STATUS_SHAD0                      00000000
STATUS_SHAD1                      00000001
STATUS_SHAD2                      00000002
STKOVF                            00000007
STKPTR                            00001FED
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
SWDTEN                            00000000
SYNC_CM1CON0                      00000000
SYNC_CM2CON0                      00000000
SYNC_TX1STA                       00000004
SYNC_TX2STA                       00000004
SYNC_TXSTA                        00000004
SYNC_TXSTA1                       00000004
SYNC_TXSTA2                       00000004
SYSCMD                            00000007
T016BIT                           00000004
T0ASYNC                           00000004
T0CKIPPS                          00001E91
T0CKIPPS0                         00000000
T0CKIPPS1                         00000001
T0CKIPPS2                         00000002
T0CKIPPS3                         00000003
T0CKIPPS4                         00000004
T0CKIPPS5                         00000005
T0CKPS0                           00000000
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

T0CKPS1                           00000001
T0CKPS2                           00000002
T0CKPS3                           00000003
T0CON0                            0000059E
T0CON1                            0000059F
T0CS0                             00000005
T0CS1                             00000006
T0CS2                             00000007
T0EN                              00000007
T0OUT                             00000005
T0OUTPS0                          00000000
T0OUTPS1                          00000001
T0OUTPS2                          00000002
T0OUTPS3                          00000003
T0PR0                             00000000
T0PR1                             00000001
T0PR2                             00000002
T0PR3                             00000003
T0PR4                             00000004
T0PR5                             00000005
T0PR6                             00000006
T0PR7                             00000007
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T1CKIPPS                          00001E92
T1CKIPPS0                         00000000
T1CKIPPS1                         00000001
T1CKIPPS2                         00000002
T1CKIPPS3                         00000003
T1CKIPPS4                         00000004
T1CKIPPS5                         00000005
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CLK                             00000211
T1CON                             0000020E
T1CS0                             00000000
T1CS1                             00000001
T1CS2                             00000002
T1CS3                             00000003
T1GATE                            00000210
T1GCON                            0000020F
T1GE                              00000007
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GPPS                            00001E93
T1GPPS0                           00000000
T1GPPS1                           00000001
T1GPPS2                           00000002
T1GPPS3                           00000003
T1GPPS4                           00000004
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

T1GPPS5                           00000005
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GSS2                            00000002
T1GSS3                            00000003
T1GSS4                            00000004
T1GTM                             00000005
T1GVAL                            00000002
T1RD16                            00000001
T2CKPOL                           00000006
T2CKPS0                           00000004
T2CKPS1                           00000005
T2CKPS2                           00000006
T2CKSYNC                          00000005
T2CLKCON                          00000290
T2CON                             0000028E
T2CS0                             00000000
T2CS1                             00000001
T2CS2                             00000002
T2CS3                             00000003
T2HLT                             0000028F
T2INPPS                           00001E9C
T2INPPS0                          00000000
T2INPPS1                          00000001
T2INPPS2                          00000002
T2INPPS3                          00000003
T2INPPS4                          00000004
T2INPPS5                          00000005
T2MODE0                           00000000
T2MODE1                           00000001
T2MODE2                           00000002
T2MODE3                           00000003
T2MODE4                           00000004
T2ON                              00000007
T2OUTPS0                          00000000
T2OUTPS1                          00000001
T2OUTPS2                          00000002
T2OUTPS3                          00000003
T2PR                              0000028D
T2PSYNC                           00000007
T2RSEL0                           00000000
T2RSEL1                           00000001
T2RSEL2                           00000002
T2RSEL3                           00000003
T2RST                             00000291
T2TMR                             0000028C
TMR0                              0000059C
TMR0H                             0000059D
TMR0H0                            00000000
TMR0H1                            00000001
TMR0H2                            00000002
TMR0H3                            00000003
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

TMR0H4                            00000004
TMR0H5                            00000005
TMR0H6                            00000006
TMR0H7                            00000007
TMR0IE                            00000005
TMR0IF                            00000005
TMR0L                             0000059C
TMR0L0                            00000000
TMR0L1                            00000001
TMR0L2                            00000002
TMR0L3                            00000003
TMR0L4                            00000004
TMR0L5                            00000005
TMR0L6                            00000006
TMR0L7                            00000007
TMR0MD                            00000000
TMR1                              0000020C
TMR10                             00000000
TMR11                             00000001
TMR110                            00000002
TMR111                            00000003
TMR112                            00000004
TMR113                            00000005
TMR114                            00000006
TMR115                            00000007
TMR12                             00000002
TMR13                             00000003
TMR14                             00000004
TMR15                             00000005
TMR16                             00000006
TMR17                             00000007
TMR18                             00000000
TMR19                             00000001
TMR1CLK                           00000211
TMR1GATE                          00000210
TMR1GIE                           00000000
TMR1GIF                           00000000
TMR1H                             0000020D
TMR1H0                            00000000
TMR1H1                            00000001
TMR1H2                            00000002
TMR1H3                            00000003
TMR1H4                            00000004
TMR1H5                            00000005
TMR1H6                            00000006
TMR1H7                            00000007
TMR1H_value                       000000FF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000020C
TMR1L0                            00000000
TMR1L1                            00000001
TMR1L2                            00000002
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L3                            00000003
TMR1L4                            00000004
TMR1L5                            00000005
TMR1L6                            00000006
TMR1L7                            00000007
TMR1L_value                       000000C0
TMR1MD                            00000001
TMR1ON                            00000000
TMR2                              0000028C
TMR2IE                            00000001
TMR2IF                            00000001
TMR2MD                            00000002
TMR2ON                            00000007
TOSH                              00001FEF
TOSH0                             00000000
TOSH1                             00000001
TOSH2                             00000002
TOSH3                             00000003
TOSH4                             00000004
TOSH5                             00000005
TOSH6                             00000006
TOSH7                             00000007
TOSL                              00001FEE
TOSL0                             00000000
TOSL1                             00000001
TOSL2                             00000002
TOSL3                             00000003
TOSL4                             00000004
TOSL5                             00000005
TOSL6                             00000006
TOSL7                             00000007
TRISA                             00000012
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000013
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000014
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TSEN                              00000005
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

TSRNG                             00000004
TX1CKPPS                          00001ECC
TX1CKPPS0                         00000000
TX1CKPPS1                         00000001
TX1CKPPS2                         00000002
TX1CKPPS3                         00000003
TX1CKPPS4                         00000004
TX1CKPPS5                         00000005
TX1IE                             00000004
TX1IF                             00000004
TX1REG                            0000011A
TX1STA                            0000011E
TX2CKPPS                          00001ECE
TX2CKPPS0                         00000000
TX2CKPPS1                         00000001
TX2CKPPS2                         00000002
TX2CKPPS3                         00000003
TX2CKPPS4                         00000004
TX2CKPPS5                         00000005
TX2IE                             00000006
TX2IF                             00000006
TX2REG                            00000A1A
TX2STA                            00000A1E
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXREG                             0000011A
TXREG1                            0000011A
TXREG2                            00000A1A
TXSTA                             0000011E
TXSTA1                            0000011E
TXSTA2                            00000A1E
UA                                00000001
UART1MD                           00000006
UART2MD                           00000007
VREGCON                           00000812
VREGPM                            00000001
W                                 00000000
WCOL                              00000007
WDTCON0                           0000080C
WDTCON1                           0000080D
WDTCS0                            00000004
WDTCS1                            00000005
WDTCS2                            00000006
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WDTPSCNT0                         00000000
WDTPSCNT1                         00000001
WDTPSCNT10                        00000002
WDTPSCNT11                        00000003
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

WDTPSCNT12                        00000004
WDTPSCNT13                        00000005
WDTPSCNT14                        00000006
WDTPSCNT15                        00000007
WDTPSCNT16                        00000000
WDTPSCNT17                        00000001
WDTPSCNT2                         00000002
WDTPSCNT3                         00000003
WDTPSCNT4                         00000004
WDTPSCNT5                         00000005
WDTPSCNT6                         00000006
WDTPSCNT7                         00000007
WDTPSCNT8                         00000000
WDTPSCNT9                         00000001
WDTPSH                            0000080F
WDTPSL                            0000080E
WDTSEN                            00000000
WDTSTATE                          00000002
WDTTMR                            00000810
WDTTMR0                           00000003
WDTTMR1                           00000004
WDTTMR2                           00000005
WDTTMR3                           00000006
WDTWINDOW0                        00000000
WDTWINDOW1                        00000001
WDTWINDOW2                        00000002
WINDOW0                           00000000
WINDOW1                           00000001
WINDOW2                           00000002
WPUA                              00001F39
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WPUB                              00001F44
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WPUC                              00001F4F
WPUC0                             00000000
WPUC1                             00000001
WPUC2                             00000002
WPUC3                             00000003
WPUC4                             00000004
WPUC5                             00000005
WPUC6                             00000006
WPUC7                             00000007
WR                                00000001
WREG                              00000009
WREG_SHAD                         00001FE5
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
ZCDCON                            0000091F
ZCDIE                             00000006
ZCDIF                             00000006
ZCDINTN                           00000000
ZCDINTP                           00000001
ZCDMD                             00000000
ZCDOUT                            00000005
ZCDPOL                            00000004
ZCDSEN                            00000007
_BBEN_OFF                         00003FFF
_BBEN_ON                          00003FF7
_BBSIZE_BB16K                     00003FFA
_BBSIZE_BB1K                      00003FFE
_BBSIZE_BB2K                      00003FFD
_BBSIZE_BB32K                     00003FF9
_BBSIZE_BB4K                      00003FFC
_BBSIZE_BB512                     00003FFF
_BBSIZE_BB64K                     00003FF8
_BBSIZE_BB8K                      00003FFB
_BOREN_NSLEEP                     00003FBF
_BOREN_OFF                        00003F3F
_BOREN_ON                         00003FFF
_BOREN_SBOREN                     00003F7F
_BORV_HI                          00003DFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      00003EFF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CONFIG3                          00008009
_CONFIG4                          0000800A
_CONFIG5                          0000800B
_CP_OFF                           00003FFF
_CP_ON                            00003FFE
_CSWEN_OFF                        000037FF
_CSWEN_ON                         00003FFF
_CYCLE_LFSR                       00000417
_DEVID1                           00008006
_FCMEN_OFF                        00001FFF
_FCMEN_ON                         00003FFF
_FEXTOSC_ECH                      00003FFF
_FEXTOSC_ECL                      00003FFD
_FEXTOSC_ECM                      00003FFE
_FEXTOSC_HS                       00003FFA
_FEXTOSC_LP                       00003FF8
_FEXTOSC_OFF                      00003FFC
_FEXTOSC_Reserved                 00003FFB
_FEXTOSC_XT                       00003FF9
_IDLOC0                           00008000
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 87


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       00003FDF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FFE
_MCLRE_ON                         00003FFF
_PPS1WAY_OFF                      000037FF
_PPS1WAY_ON                       00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FFD
_RSTOSC_EXT1X                     00003FFF
_RSTOSC_EXT4X                     00003FAF
_RSTOSC_HFINT1                    00003FEF
_RSTOSC_HFINT32                   00003F8F
_RSTOSC_HFINTPLL                  00003F9F
_RSTOSC_LFINT                     00003FDF
_RSTOSC_Reserved                  00003FBF
_SAFEN_OFF                        00003FFF
_SAFEN_ON                         00003FEF
_STVREN_OFF                       00002FFF
_STVREN_ON                        00003FFF
_WDTCCS_HFINTOSC                  00000FFF
_WDTCCS_LFINTOSC                  000007FF
_WDTCCS_Reserved                  000017FF
_WDTCCS_SC                        00003FFF
_WDTCPS_WDTCPS_0                  00003FE0
_WDTCPS_WDTCPS_1                  00003FE1
_WDTCPS_WDTCPS_10                 00003FEA
_WDTCPS_WDTCPS_11                 00003FEB
_WDTCPS_WDTCPS_12                 00003FEC
_WDTCPS_WDTCPS_13                 00003FED
_WDTCPS_WDTCPS_14                 00003FEE
_WDTCPS_WDTCPS_15                 00003FEF
_WDTCPS_WDTCPS_16                 00003FF0
_WDTCPS_WDTCPS_17                 00003FF1
_WDTCPS_WDTCPS_18                 00003FF2
_WDTCPS_WDTCPS_19                 00003FF3
_WDTCPS_WDTCPS_2                  00003FE2
_WDTCPS_WDTCPS_20                 00003FF4
_WDTCPS_WDTCPS_21                 00003FF5
_WDTCPS_WDTCPS_22                 00003FF6
_WDTCPS_WDTCPS_23                 00003FF7
_WDTCPS_WDTCPS_24                 00003FF8
_WDTCPS_WDTCPS_25                 00003FF9
_WDTCPS_WDTCPS_26                 00003FFA
_WDTCPS_WDTCPS_27                 00003FFB
_WDTCPS_WDTCPS_28                 00003FFC
_WDTCPS_WDTCPS_29                 00003FFD
_WDTCPS_WDTCPS_3                  00003FE3
_WDTCPS_WDTCPS_30                 00003FFE
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 88


SYMBOL TABLE
  LABEL                             VALUE 

_WDTCPS_WDTCPS_31                 00003FFF
_WDTCPS_WDTCPS_4                  00003FE4
_WDTCPS_WDTCPS_5                  00003FE5
_WDTCPS_WDTCPS_6                  00003FE6
_WDTCPS_WDTCPS_7                  00003FE7
_WDTCPS_WDTCPS_8                  00003FE8
_WDTCPS_WDTCPS_9                  00003FE9
_WDTCWS_WDTCWS_0                  000038FF
_WDTCWS_WDTCWS_1                  000039FF
_WDTCWS_WDTCWS_2                  00003AFF
_WDTCWS_WDTCWS_3                  00003BFF
_WDTCWS_WDTCWS_4                  00003CFF
_WDTCWS_WDTCWS_5                  00003DFF
_WDTCWS_WDTCWS_6                  00003EFF
_WDTCWS_WDTCWS_7                  00003FFF
_WDTE_NSLEEP                      00003FDF
_WDTE_OFF                         00003F9F
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FBF
_WRTAPP_OFF                       00003FFF
_WRTAPP_ON                        00003F7F
_WRTB_OFF                         00003FFF
_WRTB_ON                          00003EFF
_WRTC_OFF                         00003FFF
_WRTC_ON                          00003DFF
_WRTSAF_OFF                       00003FFF
_WRTSAF_ON                        000037FF
_ZCD_OFF                          00003FFF
_ZCD_ON                           00003BFF
__16F15344                        00000001
_clear_RGB                        0000042D
_clear_all                        00000524
_clear_all_loop                   00000527
_delay                            0000053E
_inf5_cycle                       000004F7
_inf5_cycle_not_blu               00000516
_inf5_cycle_not_org               0000050D
_inf5_cycle_not_pur               0000051F
_inf5_cycle_not_red               00000503
_pallet_cycle                     0000038F
_pallet_cycle_not_blue            0000039B
_pallet_cycle_not_green           000003A4
_pallet_cycle_not_org             000003C9
_pallet_cycle_not_pur             000003BF
_pallet_cycle_not_red             000003AD
_pallet_cycle_not_yellow          000003B6
_rainbow_cycle                    000003CF
_rainbow_cycle0                   000003DD
_rainbow_cycle1                   000003E9
_rainbow_cycle2                   000003F4
_rainbow_cycle3                   00000400
_rainbow_cycle4                   0000040B
_rotate_set_inner_ring            00000431
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 89


SYMBOL TABLE
  LABEL                             VALUE 

_rotate_set_inner_ring1           0000043F
_rotate_set_inner_ring2           0000044A
_rotate_set_inner_ring_ccw        00000452
_rotate_set_inner_ring_ccw1       00000460
_rotate_set_inner_ring_ccw2       0000046B
_rotate_set_outer_ring            00000473
_rotate_set_outer_ring1           00000481
_rotate_set_outer_ring10          000004E4
_rotate_set_outer_ring11          000004EF
_rotate_set_outer_ring2           0000048C
_rotate_set_outer_ring3           00000497
_rotate_set_outer_ring4           000004A2
_rotate_set_outer_ring5           000004AD
_rotate_set_outer_ring6           000004B8
_rotate_set_outer_ring7           000004C3
_rotate_set_outer_ring8           000004CE
_rotate_set_outer_ring9           000004D9
_set_all                          00000530
_set_all_loop                     00000533
_unlock_flash                     0000054D
ann_seq0                          0000005E
ann_seq1                          0000005F
ann_seq2                          00000060
ann_seq3                          00000061
bulk_blue                         0000005D
bulk_green                        0000005C
bulk_red                          0000005B
button_no_change                  00000131
button_was_low                    0000012D
cycle_lfsr_loop                   00000419
debounce                          00000058
delay_not_running                 0000013D
fake_pwm                          00000057
gtemp                             00000070
init_bank0_loop                   000000C4
irq_temp                          00000056
led10b                            0000003B
led10g                            0000003A
led10r                            00000039
led13b                            0000003E
led13g                            0000003D
led13r                            0000003C
led14b                            00000041
led14g                            00000040
led14r                            0000003F
led15b                            00000044
led15g                            00000043
led15r                            00000042
led16b                            00000047
led16g                            00000046
led16r                            00000045
led17b                            0000004A
led17g                            00000049
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 90


SYMBOL TABLE
  LABEL                             VALUE 

led17r                            00000048
led18b                            0000004D
led18g                            0000004C
led18r                            0000004B
led1b                             00000023
led1g                             00000022
led1r                             00000021
led2b                             00000026
led2g                             00000025
led2r                             00000024
led3b                             00000029
led3g                             00000028
led3r                             00000027
led4b                             0000002C
led4g                             0000002B
led4r                             0000002A
led5b                             0000002F
led5g                             0000002E
led5r                             0000002D
led7b                             00000032
led7g                             00000031
led7r                             00000030
led8b                             00000035
led8g                             00000034
led8r                             00000033
led9b                             00000038
led9g                             00000037
led9r                             00000036
led_seq                           00000020
max_color_depth                   00000010
mode                              00000059
mode0_ramp_down                   0000015A
mode7_done                        000001B7
mode7_ramp_down                   000001AC
modeA_loop                        000001F4
modeB_loop                        0000021D
modeC_loop                        00000246
modeD_loop                        0000026F
modeE_loop                        00000298
modeF_loop                        000002C1
mode_data_loop                    0000011A
mode_save                         00008FE0
mode_start_flash_write            00000125
not_mode0_6                       00000169
not_mode10                        000002FA
not_mode11                        00000312
not_mode12                        0000032A
not_mode13                        00000342
not_mode14                        0000035A
not_mode15                        00000372
not_mode16_1C                     0000037F
not_mode1D                        0000038C
not_mode7                         000001BA
MPASM 5.84     TWINKLETWINKIE_IRON_BADGE.ASM   6-20-2019  20:08:18         PAGE 91


SYMBOL TABLE
  LABEL                             VALUE 

not_mode7_skip                    00000194
not_mode8                         000001D2
not_mode8_skip                    000001CC
not_mode9                         000001EC
not_modeA                         00000215
not_modeB                         0000023E
not_modeC                         00000267
not_modeD                         00000290
not_modeE                         000002B9
not_modeF                         000002E2
stat                              0000005A
temp                              00000067

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    59 reported,     0 suppressed

